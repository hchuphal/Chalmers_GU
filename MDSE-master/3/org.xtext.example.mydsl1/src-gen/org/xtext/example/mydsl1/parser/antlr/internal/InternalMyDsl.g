/*
 * generated by Xtext 2.16.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl1.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl1.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl1.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "BrickModel";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleBrickModel
entryRuleBrickModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBrickModelRule()); }
	iv_ruleBrickModel=ruleBrickModel
	{ $current=$iv_ruleBrickModel.current; }
	EOF;

// Rule BrickModel
ruleBrickModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BrickModel'
		{
			newLeafNode(otherlv_0, grammarAccess.getBrickModelAccess().getBrickModelKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBrickModelAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBrickModelRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl1.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getBrickModelAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='limits'
		{
			newLeafNode(otherlv_3, grammarAccess.getBrickModelAccess().getLimitsKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBrickModelAccess().getLimitsLimitsParserRuleCall_4_0());
				}
				lv_limits_4_0=ruleLimits
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBrickModelRule());
					}
					set(
						$current,
						"limits",
						lv_limits_4_0,
						"org.xtext.example.mydsl1.MyDsl.Limits");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBrickModelAccess().getContainsBrickElementParserRuleCall_5_0_0());
					}
					lv_contains_5_0=ruleBrickElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBrickModelRule());
						}
						add(
							$current,
							"contains",
							lv_contains_5_0,
							"org.xtext.example.mydsl1.MyDsl.BrickElement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBrickModelAccess().getContainsBrickElementParserRuleCall_5_1_0());
					}
					lv_contains_6_0=ruleBrickElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBrickModelRule());
						}
						add(
							$current,
							"contains",
							lv_contains_6_0,
							"org.xtext.example.mydsl1.MyDsl.BrickElement");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getBrickModelAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleBrickElement
entryRuleBrickElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBrickElementRule()); }
	iv_ruleBrickElement=ruleBrickElement
	{ $current=$iv_ruleBrickElement.current; }
	EOF;

// Rule BrickElement
ruleBrickElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBrickElementAccess().getAbstractBrickParserRuleCall_0());
		}
		this_AbstractBrick_0=ruleAbstractBrick
		{
			$current = $this_AbstractBrick_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBrickElementAccess().getComplexBrickParserRuleCall_1());
		}
		this_ComplexBrick_1=ruleComplexBrick
		{
			$current = $this_ComplexBrick_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLimits
entryRuleLimits returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLimitsRule()); }
	iv_ruleLimits=ruleLimits
	{ $current=$iv_ruleLimits.current; }
	EOF;

// Rule Limits
ruleLimits returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLimitsAccess().getLimitsAction_0(),
					$current);
			}
		)
		otherlv_1='Dimensions'
		{
			newLeafNode(otherlv_1, grammarAccess.getLimitsAccess().getDimensionsKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLimitsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='width'
			{
				newLeafNode(otherlv_3, grammarAccess.getLimitsAccess().getWidthKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitsAccess().getWidthEIntParserRuleCall_3_1_0());
					}
					lv_width_4_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitsRule());
						}
						set(
							$current,
							"width",
							lv_width_4_0,
							"org.xtext.example.mydsl1.MyDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='height'
			{
				newLeafNode(otherlv_5, grammarAccess.getLimitsAccess().getHeightKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLimitsAccess().getLengthEIntParserRuleCall_4_1_0());
					}
					lv_length_6_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLimitsRule());
						}
						set(
							$current,
							"length",
							lv_length_6_0,
							"org.xtext.example.mydsl1.MyDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getLimitsAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleSize
entryRuleSize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSizeRule()); }
	iv_ruleSize=ruleSize
	{ $current=$iv_ruleSize.current; }
	EOF;

// Rule Size
ruleSize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSizeAccess().getSizeAction_0(),
					$current);
			}
		)
		(
			otherlv_1='height'
			{
				newLeafNode(otherlv_1, grammarAccess.getSizeAccess().getHeightKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSizeAccess().getBrickHeightEIntParserRuleCall_1_1_0());
					}
					lv_brickHeight_2_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSizeRule());
						}
						set(
							$current,
							"brickHeight",
							lv_brickHeight_2_0,
							"org.xtext.example.mydsl1.MyDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_3='width'
			{
				newLeafNode(otherlv_3, grammarAccess.getSizeAccess().getWidthKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSizeAccess().getBrickWidthEIntParserRuleCall_2_1_0());
					}
					lv_brickWidth_4_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSizeRule());
						}
						set(
							$current,
							"brickWidth",
							lv_brickWidth_4_0,
							"org.xtext.example.mydsl1.MyDsl.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAbstractBrick
entryRuleAbstractBrick returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractBrickRule()); }
	iv_ruleAbstractBrick=ruleAbstractBrick
	{ $current=$iv_ruleAbstractBrick.current; }
	EOF;

// Rule AbstractBrick
ruleAbstractBrick returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAbstractBrickAccess().getAbstractBrickAction_0(),
					$current);
			}
		)
		otherlv_1='abstract'
		{
			newLeafNode(otherlv_1, grammarAccess.getAbstractBrickAccess().getAbstractKeyword_1());
		}
		otherlv_2='Brick'
		{
			newLeafNode(otherlv_2, grammarAccess.getAbstractBrickAccess().getBrickKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbstractBrickAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbstractBrickRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"org.xtext.example.mydsl1.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getAbstractBrickAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			otherlv_5='Dimensions'
			{
				newLeafNode(otherlv_5, grammarAccess.getAbstractBrickAccess().getDimensionsKeyword_5_0());
			}
			(
				(
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getAbstractBrickRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getAbstractBrickAccess().getGetSizeBrickElementCrossReference_5_1_0_0_0());
							}
							ruleEString
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_7='.height'
					{
						newLeafNode(otherlv_7, grammarAccess.getAbstractBrickAccess().getHeightKeyword_5_1_0_1());
					}
					(
						(
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getAbstractBrickRule());
								}
							}
							{
								newCompositeNode(grammarAccess.getAbstractBrickAccess().getGetSizeBrickElementCrossReference_5_1_0_2_0());
							}
							ruleEString
							{
								afterParserOrEnumRuleCall();
							}
						)
					)
					otherlv_9='.width'
					{
						newLeafNode(otherlv_9, grammarAccess.getAbstractBrickAccess().getWidthKeyword_5_1_0_3());
					}
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getAbstractBrickAccess().getDimensionsSizeParserRuleCall_5_1_1_0());
						}
						lv_dimensions_10_0=ruleSize
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAbstractBrickRule());
							}
							set(
								$current,
								"dimensions",
								lv_dimensions_10_0,
								"org.xtext.example.mydsl1.MyDsl.Size");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)?
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getAbstractBrickAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleComplexBrick
entryRuleComplexBrick returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplexBrickRule()); }
	iv_ruleComplexBrick=ruleComplexBrick
	{ $current=$iv_ruleComplexBrick.current; }
	EOF;

// Rule ComplexBrick
ruleComplexBrick returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getComplexBrickAccess().getComplexBrickAction_0(),
					$current);
			}
		)
		otherlv_1='Brick'
		{
			newLeafNode(otherlv_1, grammarAccess.getComplexBrickAccess().getBrickKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComplexBrickAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComplexBrickRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl1.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getComplexBrickAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='createBrick'
		{
			newLeafNode(otherlv_4, grammarAccess.getComplexBrickAccess().getCreateBrickKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getComplexBrickAccess().getLeftCurlyBracketKeyword_5());
		}
		otherlv_6='Dimensions'
		{
			newLeafNode(otherlv_6, grammarAccess.getComplexBrickAccess().getDimensionsKeyword_6());
		}
		otherlv_7='('
		{
			newLeafNode(otherlv_7, grammarAccess.getComplexBrickAccess().getLeftParenthesisKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComplexBrickRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getComplexBrickAccess().getGetSizeBrickElementCrossReference_8_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='('
		{
			newLeafNode(otherlv_9, grammarAccess.getComplexBrickAccess().getLeftParenthesisKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComplexBrickAccess().getHasPositionPositionParserRuleCall_10_0());
				}
				lv_hasPosition_10_0=rulePosition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComplexBrickRule());
					}
					add(
						$current,
						"hasPosition",
						lv_hasPosition_10_0,
						"org.xtext.example.mydsl1.MyDsl.Position");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getComplexBrickAccess().getRightParenthesisKeyword_11());
		}
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getComplexBrickAccess().getCommaKeyword_12_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getComplexBrickRule());
						}
					}
					otherlv_13=RULE_ID
					{
						newLeafNode(otherlv_13, grammarAccess.getComplexBrickAccess().getGetSizeBrickElementCrossReference_12_1_0());
					}
				)
			)
			otherlv_14='('
			{
				newLeafNode(otherlv_14, grammarAccess.getComplexBrickAccess().getLeftParenthesisKeyword_12_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getComplexBrickAccess().getHasPositionPositionParserRuleCall_12_3_0());
					}
					lv_hasPosition_15_0=rulePosition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getComplexBrickRule());
						}
						add(
							$current,
							"hasPosition",
							lv_hasPosition_15_0,
							"org.xtext.example.mydsl1.MyDsl.Position");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_16=')'
			{
				newLeafNode(otherlv_16, grammarAccess.getComplexBrickAccess().getRightParenthesisKeyword_12_4());
			}
		)*
		otherlv_17=')'
		{
			newLeafNode(otherlv_17, grammarAccess.getComplexBrickAccess().getRightParenthesisKeyword_13());
		}
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getComplexBrickAccess().getRightCurlyBracketKeyword_14());
		}
		otherlv_19='}'
		{
			newLeafNode(otherlv_19, grammarAccess.getComplexBrickAccess().getRightCurlyBracketKeyword_15());
		}
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRulePosition
entryRulePosition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPositionRule()); }
	iv_rulePosition=rulePosition
	{ $current=$iv_rulePosition.current; }
	EOF;

// Rule Position
rulePosition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPositionAccess().getPositionAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPositionAccess().getXEIntParserRuleCall_1_0());
				}
				lv_x_1_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPositionRule());
					}
					set(
						$current,
						"x",
						lv_x_1_0,
						"org.xtext.example.mydsl1.MyDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=','
		{
			newLeafNode(otherlv_2, grammarAccess.getPositionAccess().getCommaKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPositionAccess().getYEIntParserRuleCall_3_0());
				}
				lv_y_3_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPositionRule());
					}
					set(
						$current,
						"y",
						lv_y_3_0,
						"org.xtext.example.mydsl1.MyDsl.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
