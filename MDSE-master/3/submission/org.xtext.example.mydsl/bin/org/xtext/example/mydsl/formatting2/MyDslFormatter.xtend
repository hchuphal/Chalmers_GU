/*
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl.formatting2

import com.google.inject.Inject
import manufacturingSystem.ManufacturingStep
import manufacturingSystem.ManufacturingSystem
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.mydsl.services.MyDslGrammarAccess

class MyDslFormatter extends AbstractFormatter2 {
	
	@Inject extension MyDslGrammarAccess

	def dispatch void format(ManufacturingSystem manufacturingSystem, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (responsible : manufacturingSystem.staff) {
			responsible.format
		}
		for (workPieceType : manufacturingSystem.uses) {
			workPieceType.format
		}
		for (workPiece : manufacturingSystem.transforms) {
			workPiece.format
		}
		for (manufacturingSystemElement : manufacturingSystem.consistsOf) {
			manufacturingSystemElement.format
		}
	}

	def dispatch void format(ManufacturingStep manufacturingStep, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (inputCondition : manufacturingStep.input) {
			inputCondition.format
		}
		for (outputDecision : manufacturingStep.output) {
			outputDecision.format
		}
	}
	
	// TODO: implement for TransportStep, QualityAssuranceStep, CompositeManufacturingStep
}
