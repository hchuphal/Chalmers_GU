// automatically generated by Xtext
grammar org.xtext.example.mydsl1.MyDsl with org.eclipse.xtext.common.Terminals

import "com.chalmers" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

BrickModel returns BrickModel:
	'BrickModel'
	name=EString
	'{'
		('contains' '{' contains+=BrickElement ( "," contains+=BrickElement)* '}' )?
		'limits' limits=Limits
	'}';

BrickElement returns BrickElement:
	AbstractBrick | ComplexBrick;




Limits returns Limits:
	'Limits'
	'{'
		'width' width=EInt
		'length' length=EInt
	'}';

EString returns ecore::EString:
	STRING | ID;

Size returns Size:
	'Size'
	'{'
		'brickHeight' brickHeight=EInt
		'brickWidth' brickWidth=EInt
	'}';

AbstractBrick returns AbstractBrick:
	{AbstractBrick}
	'AbstractBrick'
	name=EString
	'{'
		('getSize' '(' getSize+=[BrickElement|EString] ( "," getSize+=[BrickElement|EString])* ')' )?
		('dimensions' dimensions=Size)?
	'}';

ComplexBrick returns ComplexBrick:
	{ComplexBrick}
	'ComplexBrick'
	name=EString
	'{'
		('getSize' '(' getSize+=[BrickElement|EString] ( "," getSize+=[BrickElement|EString])* ')' )?
		('dimensions' dimensions=Size)?
		('hasPosition' '{' hasPosition+=Position ( "," hasPosition+=Position)* '}' )?
	'}';

EInt returns ecore::EInt:
	'-'? INT;

Position returns Position:
	{Position}
	'Position'
	'{'
		('x' x=EInt)?
		('y' y=EInt)?
	'}';
