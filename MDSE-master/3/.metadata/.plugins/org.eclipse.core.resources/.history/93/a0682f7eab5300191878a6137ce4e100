/*
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl1.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import brickModel2.BrickModel
import brickModel2.ComplexBrick

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
fsa.generateFile('LegoBrick.gv',
            '''  
            	«val mySet = #{'Center','Center'}»
            	«FOR m : resource.allContents.filter(ComplexBrick).toIterable»
            		«var x = 0»
            		«var y = 0»
            		«var z = 0»
                    «IF(m.getSize.get(0).dimensions.brickHeight >= 1)»
					 «FOR y : 0 ..< m.getSize.get(0).dimensions.brickHeight»
					 tube = new Cylinder(0.75, 1, 1, 1);
					 pos = new Vec3(0.75, «brick», «(y*2.75)+0.75»);
					 script.addObject(tube, new CoordinateSystem(pos, 0, 0, 0));					 
					  «IF(m.getSize.get(0).dimensions.brickWidth > 1)»
					  «FOR x : 1 ..< m.getSize.get(0).dimensions.brickWidth»
					   tube = new Cylinder(0.75, 1, 1, 1);
					   pos = new Vec3(«(x*2.75)+0.75», «brick», «(y*2.75)+0.75»);
					   script.addObject(tube, new CoordinateSystem(pos, 0, 0, 0));
					  «ENDFOR»
					  «ENDIF» 
					 «ENDFOR»
					 
                 «ENDIF»   
                 «brick = brick +2»               
               «ENDFOR»
            '''
            )
    }   
}