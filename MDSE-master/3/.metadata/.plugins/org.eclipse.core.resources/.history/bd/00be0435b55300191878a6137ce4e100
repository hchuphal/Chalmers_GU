/*
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl1.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import brickModel2.BrickModel
import brickModel2.ComplexBrick

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
fsa.generateFile('LegoBrick.gv',
            '''  
            	«val mySet = #{'Center','Center'}»
            	«FOR m : resource.allContents.filter(ComplexBrick).toIterable»
            		«var xAxis = 0»
            		«var yAxis = 0»
            		«var zAxis = 0»
            		«var i = 0»
            		«FOR total : 0..<m.getSize.size»
                    «IF(m.getSize.get(i).dimensions.brickHeight >= 1)»
					 «FOR y : 0 ..< m.getSize.get(i).dimensions.brickHeight»
					 tube = new Cylinder(0.75, 1, 1, 1);
					 pos = new Vec3(«xAxis+0.75», «zAxis», «(y*2.75)+0.75+yAxis»);
					 script.addObject(tube, new CoordinateSystem(pos, 0, 0, 0));					 
					  «IF(m.getSize.get(i).dimensions.brickWidth > 1)»
					  «FOR x : 1 ..< m.getSize.get(i).dimensions.brickWidth»
					 tube = new Cylinder(0.75, 1, 1, 1);
					 pos = new Vec3(«(x*2.75)+0.75+xAxis», «zAxis», «(y*2.75)+0.75+yAxis»);
					 script.addObject(tube, new CoordinateSystem(pos, 0, 0, 0));
					  «ENDFOR»
					  «ENDIF» 
					 «ENDFOR»
					 
                 «ENDIF»   
                 
                 // Connect other Brick to :: x= «xAxis = m.hasPosition.get(i).x» y= «yAxis = m.hasPosition.get(i).y» z=«zAxis = zAxis +2» for brick No «i++»
                 // Botton line
               
                 //Top Line
                 «FOR x : 1 ..< m.getSize.get(i).dimensions.brickWidth»
                	//bottom wall
                	cube = new Cube(2.9, 2, 0.25);
                	pos = new Vec3(«((2.75*x)+0.75)», 1.4, -0.6);
                	script.addObject(cube, new CoordinateSystem(pos, 0, 0, 0));
                	
                	//top wall
                	cube = new Cube(2.9, 2, 0.25);
                	pos = new Vec3(«((2.75*x)+0.75)», 1.4, -0.6);
	                script.addObject(cube, new CoordinateSystem(pos, 0, 0, 0));
 
                 «ENDFOR»
                 «ENDFOR»
                 
               «ENDFOR»
            '''
            )
    }   
}