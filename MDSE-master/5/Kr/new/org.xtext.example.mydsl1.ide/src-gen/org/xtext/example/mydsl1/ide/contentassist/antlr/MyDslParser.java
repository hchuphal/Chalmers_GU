/*
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl1.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl1.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl1.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getBrickElementAccess().getAlternatives(), "rule__BrickElement__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getAbstractBrickAccess().getAlternatives_5_1(), "rule__AbstractBrick__Alternatives_5_1");
			builder.put(grammarAccess.getBrickPositionAccess().getAlternatives(), "rule__BrickPosition__Alternatives");
			builder.put(grammarAccess.getBrickModelAccess().getGroup(), "rule__BrickModel__Group__0");
			builder.put(grammarAccess.getBrickModelAccess().getGroup_5(), "rule__BrickModel__Group_5__0");
			builder.put(grammarAccess.getLimitsAccess().getGroup(), "rule__Limits__Group__0");
			builder.put(grammarAccess.getLimitsAccess().getGroup_3(), "rule__Limits__Group_3__0");
			builder.put(grammarAccess.getLimitsAccess().getGroup_4(), "rule__Limits__Group_4__0");
			builder.put(grammarAccess.getSizeAccess().getGroup(), "rule__Size__Group__0");
			builder.put(grammarAccess.getSizeAccess().getGroup_1(), "rule__Size__Group_1__0");
			builder.put(grammarAccess.getSizeAccess().getGroup_2(), "rule__Size__Group_2__0");
			builder.put(grammarAccess.getAbstractBrickAccess().getGroup(), "rule__AbstractBrick__Group__0");
			builder.put(grammarAccess.getAbstractBrickAccess().getGroup_5(), "rule__AbstractBrick__Group_5__0");
			builder.put(grammarAccess.getAbstractBrickAccess().getGroup_5_1_0(), "rule__AbstractBrick__Group_5_1_0__0");
			builder.put(grammarAccess.getComplexBrickAccess().getGroup(), "rule__ComplexBrick__Group__0");
			builder.put(grammarAccess.getComplexBrickAccess().getGroup_13(), "rule__ComplexBrick__Group_13__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getPositionAccess().getGroup(), "rule__Position__Group__0");
			builder.put(grammarAccess.getBrickModelAccess().getNameAssignment_1(), "rule__BrickModel__NameAssignment_1");
			builder.put(grammarAccess.getBrickModelAccess().getLimitsAssignment_4(), "rule__BrickModel__LimitsAssignment_4");
			builder.put(grammarAccess.getBrickModelAccess().getContainsAssignment_5_0(), "rule__BrickModel__ContainsAssignment_5_0");
			builder.put(grammarAccess.getBrickModelAccess().getContainsAssignment_5_1(), "rule__BrickModel__ContainsAssignment_5_1");
			builder.put(grammarAccess.getLimitsAccess().getWidthAssignment_3_1(), "rule__Limits__WidthAssignment_3_1");
			builder.put(grammarAccess.getLimitsAccess().getLengthAssignment_4_1(), "rule__Limits__LengthAssignment_4_1");
			builder.put(grammarAccess.getSizeAccess().getBrickHeightAssignment_1_1(), "rule__Size__BrickHeightAssignment_1_1");
			builder.put(grammarAccess.getSizeAccess().getBrickWidthAssignment_2_1(), "rule__Size__BrickWidthAssignment_2_1");
			builder.put(grammarAccess.getAbstractBrickAccess().getNameAssignment_3(), "rule__AbstractBrick__NameAssignment_3");
			builder.put(grammarAccess.getAbstractBrickAccess().getGetSizeAssignment_5_1_0_0(), "rule__AbstractBrick__GetSizeAssignment_5_1_0_0");
			builder.put(grammarAccess.getAbstractBrickAccess().getGetSizeAssignment_5_1_0_2(), "rule__AbstractBrick__GetSizeAssignment_5_1_0_2");
			builder.put(grammarAccess.getAbstractBrickAccess().getDimensionsAssignment_5_1_1(), "rule__AbstractBrick__DimensionsAssignment_5_1_1");
			builder.put(grammarAccess.getComplexBrickAccess().getNameAssignment_2(), "rule__ComplexBrick__NameAssignment_2");
			builder.put(grammarAccess.getComplexBrickAccess().getGetSizeAssignment_8(), "rule__ComplexBrick__GetSizeAssignment_8");
			builder.put(grammarAccess.getComplexBrickAccess().getGetSizeAssignment_10(), "rule__ComplexBrick__GetSizeAssignment_10");
			builder.put(grammarAccess.getComplexBrickAccess().getHasPositionAssignment_12(), "rule__ComplexBrick__HasPositionAssignment_12");
			builder.put(grammarAccess.getComplexBrickAccess().getHasPositionAssignment_13_1(), "rule__ComplexBrick__HasPositionAssignment_13_1");
			builder.put(grammarAccess.getPositionAccess().getCoordinatesAssignment_1(), "rule__Position__CoordinatesAssignment_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
