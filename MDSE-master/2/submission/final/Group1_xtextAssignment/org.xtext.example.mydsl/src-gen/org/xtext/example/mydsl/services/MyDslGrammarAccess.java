/*
 * generated by Xtext 2.16.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ManufacturingSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ManufacturingSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cManufacturingSystemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSetKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cStartKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cStorageKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cStartAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cStartStoragePointCrossReference_6_0 = (CrossReference)cStartAssignment_6.eContents().get(0);
		private final RuleCall cStartStoragePointEStringParserRuleCall_6_0_1 = (RuleCall)cStartStoragePointCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cStartAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cStartStoragePointCrossReference_7_1_0 = (CrossReference)cStartAssignment_7_1.eContents().get(0);
		private final RuleCall cStartStoragePointEStringParserRuleCall_7_1_0_1 = (RuleCall)cStartStoragePointCrossReference_7_1_0.eContents().get(1);
		private final Keyword cSetKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cEndKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cStorageKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cEndAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final CrossReference cEndStoragePointCrossReference_11_0 = (CrossReference)cEndAssignment_11.eContents().get(0);
		private final RuleCall cEndStoragePointEStringParserRuleCall_11_0_1 = (RuleCall)cEndStoragePointCrossReference_11_0.eContents().get(1);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cCommaKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cEndAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final CrossReference cEndStoragePointCrossReference_12_1_0 = (CrossReference)cEndAssignment_12_1.eContents().get(0);
		private final RuleCall cEndStoragePointEStringParserRuleCall_12_1_0_1 = (RuleCall)cEndStoragePointCrossReference_12_1_0.eContents().get(1);
		private final Keyword cCreateKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cResponsibleKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Assignment cStaffAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cStaffResponsibleParserRuleCall_15_0 = (RuleCall)cStaffAssignment_15.eContents().get(0);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cCommaKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cStaffAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final RuleCall cStaffResponsibleParserRuleCall_16_1_0 = (RuleCall)cStaffAssignment_16_1.eContents().get(0);
		private final Keyword cSetKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Keyword cLeadKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Keyword cResponsibleKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Assignment cResponsibleAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final CrossReference cResponsibleResponsibleCrossReference_20_0 = (CrossReference)cResponsibleAssignment_20.eContents().get(0);
		private final RuleCall cResponsibleResponsibleEStringParserRuleCall_20_0_1 = (RuleCall)cResponsibleResponsibleCrossReference_20_0.eContents().get(1);
		private final Group cGroup_21 = (Group)cGroup.eContents().get(21);
		private final Keyword cWorkpieceKeyword_21_0 = (Keyword)cGroup_21.eContents().get(0);
		private final Keyword cTypeKeyword_21_1 = (Keyword)cGroup_21.eContents().get(1);
		private final Assignment cUsesAssignment_21_2 = (Assignment)cGroup_21.eContents().get(2);
		private final RuleCall cUsesWorkPieceTypeParserRuleCall_21_2_0 = (RuleCall)cUsesAssignment_21_2.eContents().get(0);
		private final Group cGroup_21_3 = (Group)cGroup_21.eContents().get(3);
		private final Keyword cCommaKeyword_21_3_0 = (Keyword)cGroup_21_3.eContents().get(0);
		private final Assignment cUsesAssignment_21_3_1 = (Assignment)cGroup_21_3.eContents().get(1);
		private final RuleCall cUsesWorkPieceTypeParserRuleCall_21_3_1_0 = (RuleCall)cUsesAssignment_21_3_1.eContents().get(0);
		private final Group cGroup_22 = (Group)cGroup.eContents().get(22);
		private final Keyword cProcessesKeyword_22_0 = (Keyword)cGroup_22.eContents().get(0);
		private final Assignment cTransformsAssignment_22_1 = (Assignment)cGroup_22.eContents().get(1);
		private final RuleCall cTransformsWorkPieceParserRuleCall_22_1_0 = (RuleCall)cTransformsAssignment_22_1.eContents().get(0);
		private final Group cGroup_22_2 = (Group)cGroup_22.eContents().get(2);
		private final Keyword cCommaKeyword_22_2_0 = (Keyword)cGroup_22_2.eContents().get(0);
		private final Assignment cTransformsAssignment_22_2_1 = (Assignment)cGroup_22_2.eContents().get(1);
		private final RuleCall cTransformsWorkPieceParserRuleCall_22_2_1_0 = (RuleCall)cTransformsAssignment_22_2_1.eContents().get(0);
		private final Group cGroup_23 = (Group)cGroup.eContents().get(23);
		private final Keyword cInitiateKeyword_23_0 = (Keyword)cGroup_23.eContents().get(0);
		private final Alternatives cAlternatives_23_1 = (Alternatives)cGroup_23.eContents().get(1);
		private final Assignment cConsistsOfAssignment_23_1_0 = (Assignment)cAlternatives_23_1.eContents().get(0);
		private final RuleCall cConsistsOfManufacturingSystemElementParserRuleCall_23_1_0_0 = (RuleCall)cConsistsOfAssignment_23_1_0.eContents().get(0);
		private final Group cGroup_23_1_1 = (Group)cAlternatives_23_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_23_1_1_0 = (Keyword)cGroup_23_1_1.eContents().get(0);
		private final Assignment cConsistsOfAssignment_23_1_1_1 = (Assignment)cGroup_23_1_1.eContents().get(1);
		private final RuleCall cConsistsOfManufacturingSystemElementParserRuleCall_23_1_1_1_0 = (RuleCall)cConsistsOfAssignment_23_1_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_23_1_1_2 = (Keyword)cGroup_23_1_1.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_24 = (Keyword)cGroup.eContents().get(24);
		
		//ManufacturingSystem:
		//	'ManufacturingSystem'
		//	name=EString
		//	'{'
		//	'set' 'start' 'storage' start+=[StoragePoint|EString] ("," start+=[StoragePoint|EString])*
		//	'set' 'end' 'storage' end+=[StoragePoint|EString] ("," end+=[StoragePoint|EString])*
		//	'create' 'responsible' staff+=Responsible ("," staff+=Responsible)*
		//	'set' 'lead' 'responsible' responsible=[Responsible|EString] ('workpiece' 'type' uses+=WorkPieceType (","
		//	uses+=WorkPieceType)*)? ('processes' transforms+=WorkPiece ("," transforms+=WorkPiece)*)? ('initiate'
		//	(consistsOf+=ManufacturingSystemElement* | '{' consistsOf+=ManufacturingSystemElement* '}'))*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ManufacturingSystem' name=EString '{' 'set' 'start' 'storage' start+=[StoragePoint|EString] (","
		//start+=[StoragePoint|EString])* 'set' 'end' 'storage' end+=[StoragePoint|EString] ("," end+=[StoragePoint|EString])*
		//'create' 'responsible' staff+=Responsible ("," staff+=Responsible)* 'set' 'lead' 'responsible'
		//responsible=[Responsible|EString] ('workpiece' 'type' uses+=WorkPieceType ("," uses+=WorkPieceType)*)? ('processes'
		//transforms+=WorkPiece ("," transforms+=WorkPiece)*)? ('initiate' (consistsOf+=ManufacturingSystemElement* | '{'
		//consistsOf+=ManufacturingSystemElement* '}'))* '}'
		public Group getGroup() { return cGroup; }
		
		//'ManufacturingSystem'
		public Keyword getManufacturingSystemKeyword_0() { return cManufacturingSystemKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'set'
		public Keyword getSetKeyword_3() { return cSetKeyword_3; }
		
		//'start'
		public Keyword getStartKeyword_4() { return cStartKeyword_4; }
		
		//'storage'
		public Keyword getStorageKeyword_5() { return cStorageKeyword_5; }
		
		//start+=[StoragePoint|EString]
		public Assignment getStartAssignment_6() { return cStartAssignment_6; }
		
		//[StoragePoint|EString]
		public CrossReference getStartStoragePointCrossReference_6_0() { return cStartStoragePointCrossReference_6_0; }
		
		//EString
		public RuleCall getStartStoragePointEStringParserRuleCall_6_0_1() { return cStartStoragePointEStringParserRuleCall_6_0_1; }
		
		//("," start+=[StoragePoint|EString])*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//start+=[StoragePoint|EString]
		public Assignment getStartAssignment_7_1() { return cStartAssignment_7_1; }
		
		//[StoragePoint|EString]
		public CrossReference getStartStoragePointCrossReference_7_1_0() { return cStartStoragePointCrossReference_7_1_0; }
		
		//EString
		public RuleCall getStartStoragePointEStringParserRuleCall_7_1_0_1() { return cStartStoragePointEStringParserRuleCall_7_1_0_1; }
		
		//'set'
		public Keyword getSetKeyword_8() { return cSetKeyword_8; }
		
		//'end'
		public Keyword getEndKeyword_9() { return cEndKeyword_9; }
		
		//'storage'
		public Keyword getStorageKeyword_10() { return cStorageKeyword_10; }
		
		//end+=[StoragePoint|EString]
		public Assignment getEndAssignment_11() { return cEndAssignment_11; }
		
		//[StoragePoint|EString]
		public CrossReference getEndStoragePointCrossReference_11_0() { return cEndStoragePointCrossReference_11_0; }
		
		//EString
		public RuleCall getEndStoragePointEStringParserRuleCall_11_0_1() { return cEndStoragePointEStringParserRuleCall_11_0_1; }
		
		//("," end+=[StoragePoint|EString])*
		public Group getGroup_12() { return cGroup_12; }
		
		//","
		public Keyword getCommaKeyword_12_0() { return cCommaKeyword_12_0; }
		
		//end+=[StoragePoint|EString]
		public Assignment getEndAssignment_12_1() { return cEndAssignment_12_1; }
		
		//[StoragePoint|EString]
		public CrossReference getEndStoragePointCrossReference_12_1_0() { return cEndStoragePointCrossReference_12_1_0; }
		
		//EString
		public RuleCall getEndStoragePointEStringParserRuleCall_12_1_0_1() { return cEndStoragePointEStringParserRuleCall_12_1_0_1; }
		
		//'create'
		public Keyword getCreateKeyword_13() { return cCreateKeyword_13; }
		
		//'responsible'
		public Keyword getResponsibleKeyword_14() { return cResponsibleKeyword_14; }
		
		//staff+=Responsible
		public Assignment getStaffAssignment_15() { return cStaffAssignment_15; }
		
		//Responsible
		public RuleCall getStaffResponsibleParserRuleCall_15_0() { return cStaffResponsibleParserRuleCall_15_0; }
		
		//("," staff+=Responsible)*
		public Group getGroup_16() { return cGroup_16; }
		
		//","
		public Keyword getCommaKeyword_16_0() { return cCommaKeyword_16_0; }
		
		//staff+=Responsible
		public Assignment getStaffAssignment_16_1() { return cStaffAssignment_16_1; }
		
		//Responsible
		public RuleCall getStaffResponsibleParserRuleCall_16_1_0() { return cStaffResponsibleParserRuleCall_16_1_0; }
		
		//'set'
		public Keyword getSetKeyword_17() { return cSetKeyword_17; }
		
		//'lead'
		public Keyword getLeadKeyword_18() { return cLeadKeyword_18; }
		
		//'responsible'
		public Keyword getResponsibleKeyword_19() { return cResponsibleKeyword_19; }
		
		//responsible=[Responsible|EString]
		public Assignment getResponsibleAssignment_20() { return cResponsibleAssignment_20; }
		
		//[Responsible|EString]
		public CrossReference getResponsibleResponsibleCrossReference_20_0() { return cResponsibleResponsibleCrossReference_20_0; }
		
		//EString
		public RuleCall getResponsibleResponsibleEStringParserRuleCall_20_0_1() { return cResponsibleResponsibleEStringParserRuleCall_20_0_1; }
		
		//('workpiece' 'type' uses+=WorkPieceType ("," uses+=WorkPieceType)*)?
		public Group getGroup_21() { return cGroup_21; }
		
		//'workpiece'
		public Keyword getWorkpieceKeyword_21_0() { return cWorkpieceKeyword_21_0; }
		
		//'type'
		public Keyword getTypeKeyword_21_1() { return cTypeKeyword_21_1; }
		
		//uses+=WorkPieceType
		public Assignment getUsesAssignment_21_2() { return cUsesAssignment_21_2; }
		
		//WorkPieceType
		public RuleCall getUsesWorkPieceTypeParserRuleCall_21_2_0() { return cUsesWorkPieceTypeParserRuleCall_21_2_0; }
		
		//("," uses+=WorkPieceType)*
		public Group getGroup_21_3() { return cGroup_21_3; }
		
		//","
		public Keyword getCommaKeyword_21_3_0() { return cCommaKeyword_21_3_0; }
		
		//uses+=WorkPieceType
		public Assignment getUsesAssignment_21_3_1() { return cUsesAssignment_21_3_1; }
		
		//WorkPieceType
		public RuleCall getUsesWorkPieceTypeParserRuleCall_21_3_1_0() { return cUsesWorkPieceTypeParserRuleCall_21_3_1_0; }
		
		//('processes' transforms+=WorkPiece ("," transforms+=WorkPiece)*)?
		public Group getGroup_22() { return cGroup_22; }
		
		//'processes'
		public Keyword getProcessesKeyword_22_0() { return cProcessesKeyword_22_0; }
		
		//transforms+=WorkPiece
		public Assignment getTransformsAssignment_22_1() { return cTransformsAssignment_22_1; }
		
		//WorkPiece
		public RuleCall getTransformsWorkPieceParserRuleCall_22_1_0() { return cTransformsWorkPieceParserRuleCall_22_1_0; }
		
		//("," transforms+=WorkPiece)*
		public Group getGroup_22_2() { return cGroup_22_2; }
		
		//","
		public Keyword getCommaKeyword_22_2_0() { return cCommaKeyword_22_2_0; }
		
		//transforms+=WorkPiece
		public Assignment getTransformsAssignment_22_2_1() { return cTransformsAssignment_22_2_1; }
		
		//WorkPiece
		public RuleCall getTransformsWorkPieceParserRuleCall_22_2_1_0() { return cTransformsWorkPieceParserRuleCall_22_2_1_0; }
		
		//('initiate' (consistsOf+=ManufacturingSystemElement* | '{' consistsOf+=ManufacturingSystemElement* '}'))*
		public Group getGroup_23() { return cGroup_23; }
		
		//'initiate'
		public Keyword getInitiateKeyword_23_0() { return cInitiateKeyword_23_0; }
		
		//consistsOf+=ManufacturingSystemElement* | '{' consistsOf+=ManufacturingSystemElement* '}'
		public Alternatives getAlternatives_23_1() { return cAlternatives_23_1; }
		
		//consistsOf+=ManufacturingSystemElement*
		public Assignment getConsistsOfAssignment_23_1_0() { return cConsistsOfAssignment_23_1_0; }
		
		//ManufacturingSystemElement
		public RuleCall getConsistsOfManufacturingSystemElementParserRuleCall_23_1_0_0() { return cConsistsOfManufacturingSystemElementParserRuleCall_23_1_0_0; }
		
		//'{' consistsOf+=ManufacturingSystemElement* '}'
		public Group getGroup_23_1_1() { return cGroup_23_1_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_23_1_1_0() { return cLeftCurlyBracketKeyword_23_1_1_0; }
		
		//consistsOf+=ManufacturingSystemElement*
		public Assignment getConsistsOfAssignment_23_1_1_1() { return cConsistsOfAssignment_23_1_1_1; }
		
		//ManufacturingSystemElement
		public RuleCall getConsistsOfManufacturingSystemElementParserRuleCall_23_1_1_1_0() { return cConsistsOfManufacturingSystemElementParserRuleCall_23_1_1_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_23_1_1_2() { return cRightCurlyBracketKeyword_23_1_1_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_24() { return cRightCurlyBracketKeyword_24; }
	}
	public class ManufacturingSystemElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ManufacturingSystemElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cManufacturingSystemElement_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cManufacturingStepParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTransportStepParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cQualityAssuranceStepParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cStoragePointParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cCompositeManufacturingStepParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//ManufacturingSystemElement:
		//	ManufacturingSystemElement_Impl | ManufacturingStep | TransportStep | QualityAssuranceStep | StoragePoint |
		//	CompositeManufacturingStep;
		@Override public ParserRule getRule() { return rule; }
		
		//ManufacturingSystemElement_Impl | ManufacturingStep | TransportStep | QualityAssuranceStep | StoragePoint |
		//CompositeManufacturingStep
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ManufacturingSystemElement_Impl
		public RuleCall getManufacturingSystemElement_ImplParserRuleCall_0() { return cManufacturingSystemElement_ImplParserRuleCall_0; }
		
		//ManufacturingStep
		public RuleCall getManufacturingStepParserRuleCall_1() { return cManufacturingStepParserRuleCall_1; }
		
		//TransportStep
		public RuleCall getTransportStepParserRuleCall_2() { return cTransportStepParserRuleCall_2; }
		
		//QualityAssuranceStep
		public RuleCall getQualityAssuranceStepParserRuleCall_3() { return cQualityAssuranceStepParserRuleCall_3; }
		
		//StoragePoint
		public RuleCall getStoragePointParserRuleCall_4() { return cStoragePointParserRuleCall_4; }
		
		//CompositeManufacturingStep
		public RuleCall getCompositeManufacturingStepParserRuleCall_5() { return cCompositeManufacturingStepParserRuleCall_5; }
	}
	public class InputConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.InputCondition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInputCondition_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWorkPieceConditionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBinaryConditionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cNegationParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//InputCondition:
		//	InputCondition_Impl | WorkPieceCondition | BinaryCondition | Negation;
		@Override public ParserRule getRule() { return rule; }
		
		//InputCondition_Impl | WorkPieceCondition | BinaryCondition | Negation
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//InputCondition_Impl
		public RuleCall getInputCondition_ImplParserRuleCall_0() { return cInputCondition_ImplParserRuleCall_0; }
		
		//WorkPieceCondition
		public RuleCall getWorkPieceConditionParserRuleCall_1() { return cWorkPieceConditionParserRuleCall_1; }
		
		//BinaryCondition
		public RuleCall getBinaryConditionParserRuleCall_2() { return cBinaryConditionParserRuleCall_2; }
		
		//Negation
		public RuleCall getNegationParserRuleCall_3() { return cNegationParserRuleCall_3; }
	}
	public class ManufacturingSystemElement_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ManufacturingSystemElement_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cManufacturingSystemElementAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cManufacturingSystemElementKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTransitionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cTransitionAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cTransitionManufacturingSystemElementCrossReference_4_2_0 = (CrossReference)cTransitionAssignment_4_2.eContents().get(0);
		private final RuleCall cTransitionManufacturingSystemElementEStringParserRuleCall_4_2_0_1 = (RuleCall)cTransitionManufacturingSystemElementCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cTransitionAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final CrossReference cTransitionManufacturingSystemElementCrossReference_4_3_1_0 = (CrossReference)cTransitionAssignment_4_3_1.eContents().get(0);
		private final RuleCall cTransitionManufacturingSystemElementEStringParserRuleCall_4_3_1_0_1 = (RuleCall)cTransitionManufacturingSystemElementCrossReference_4_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cSetKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cResponsibleKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cResponsibleAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cResponsibleResponsibleCrossReference_7_0 = (CrossReference)cResponsibleAssignment_7.eContents().get(0);
		private final RuleCall cResponsibleResponsibleEStringParserRuleCall_7_0_1 = (RuleCall)cResponsibleResponsibleCrossReference_7_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//ManufacturingSystemElement_Impl ManufacturingSystemElement:
		//	{ManufacturingSystemElement}
		//	'ManufacturingSystemElement'
		//	name=EString
		//	'{' ('transition' '(' transition+=[ManufacturingSystemElement|EString] (","
		//	transition+=[ManufacturingSystemElement|EString])* ')')?
		//	'set' 'responsible' responsible=[Responsible|EString]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ManufacturingSystemElement} 'ManufacturingSystemElement' name=EString '{' ('transition' '('
		//transition+=[ManufacturingSystemElement|EString] ("," transition+=[ManufacturingSystemElement|EString])* ')')? 'set'
		//'responsible' responsible=[Responsible|EString] '}'
		public Group getGroup() { return cGroup; }
		
		//{ManufacturingSystemElement}
		public Action getManufacturingSystemElementAction_0() { return cManufacturingSystemElementAction_0; }
		
		//'ManufacturingSystemElement'
		public Keyword getManufacturingSystemElementKeyword_1() { return cManufacturingSystemElementKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('transition' '(' transition+=[ManufacturingSystemElement|EString] (","
		//transition+=[ManufacturingSystemElement|EString])* ')')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'transition'
		public Keyword getTransitionKeyword_4_0() { return cTransitionKeyword_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }
		
		//transition+=[ManufacturingSystemElement|EString]
		public Assignment getTransitionAssignment_4_2() { return cTransitionAssignment_4_2; }
		
		//[ManufacturingSystemElement|EString]
		public CrossReference getTransitionManufacturingSystemElementCrossReference_4_2_0() { return cTransitionManufacturingSystemElementCrossReference_4_2_0; }
		
		//EString
		public RuleCall getTransitionManufacturingSystemElementEStringParserRuleCall_4_2_0_1() { return cTransitionManufacturingSystemElementEStringParserRuleCall_4_2_0_1; }
		
		//("," transition+=[ManufacturingSystemElement|EString])*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//transition+=[ManufacturingSystemElement|EString]
		public Assignment getTransitionAssignment_4_3_1() { return cTransitionAssignment_4_3_1; }
		
		//[ManufacturingSystemElement|EString]
		public CrossReference getTransitionManufacturingSystemElementCrossReference_4_3_1_0() { return cTransitionManufacturingSystemElementCrossReference_4_3_1_0; }
		
		//EString
		public RuleCall getTransitionManufacturingSystemElementEStringParserRuleCall_4_3_1_0_1() { return cTransitionManufacturingSystemElementEStringParserRuleCall_4_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }
		
		//'set'
		public Keyword getSetKeyword_5() { return cSetKeyword_5; }
		
		//'responsible'
		public Keyword getResponsibleKeyword_6() { return cResponsibleKeyword_6; }
		
		//responsible=[Responsible|EString]
		public Assignment getResponsibleAssignment_7() { return cResponsibleAssignment_7; }
		
		//[Responsible|EString]
		public CrossReference getResponsibleResponsibleCrossReference_7_0() { return cResponsibleResponsibleCrossReference_7_0; }
		
		//EString
		public RuleCall getResponsibleResponsibleEStringParserRuleCall_7_0_1() { return cResponsibleResponsibleEStringParserRuleCall_7_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class StoragePointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.StoragePoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStoragePointKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSetKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cResponsibleKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cResponsibleAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cResponsibleResponsibleCrossReference_5_0 = (CrossReference)cResponsibleAssignment_5.eContents().get(0);
		private final RuleCall cResponsibleResponsibleEStringParserRuleCall_5_0_1 = (RuleCall)cResponsibleResponsibleCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cStoresKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cStoresAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cStoresWorkPieceTypeCrossReference_6_1_0 = (CrossReference)cStoresAssignment_6_1.eContents().get(0);
		private final RuleCall cStoresWorkPieceTypeEStringParserRuleCall_6_1_0_1 = (RuleCall)cStoresWorkPieceTypeCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cStoresAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cStoresWorkPieceTypeCrossReference_6_2_1_0 = (CrossReference)cStoresAssignment_6_2_1.eContents().get(0);
		private final RuleCall cStoresWorkPieceTypeEStringParserRuleCall_6_2_1_0_1 = (RuleCall)cStoresWorkPieceTypeCrossReference_6_2_1_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cTransitionKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cTransitionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cTransitionManufacturingSystemElementCrossReference_7_1_0 = (CrossReference)cTransitionAssignment_7_1.eContents().get(0);
		private final RuleCall cTransitionManufacturingSystemElementEStringParserRuleCall_7_1_0_1 = (RuleCall)cTransitionManufacturingSystemElementCrossReference_7_1_0.eContents().get(1);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Keyword cCommaKeyword_7_2_0 = (Keyword)cGroup_7_2.eContents().get(0);
		private final Assignment cTransitionAssignment_7_2_1 = (Assignment)cGroup_7_2.eContents().get(1);
		private final CrossReference cTransitionManufacturingSystemElementCrossReference_7_2_1_0 = (CrossReference)cTransitionAssignment_7_2_1.eContents().get(0);
		private final RuleCall cTransitionManufacturingSystemElementEStringParserRuleCall_7_2_1_0_1 = (RuleCall)cTransitionManufacturingSystemElementCrossReference_7_2_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//StoragePoint:
		//	'StoragePoint'
		//	name=EString
		//	'{'
		//	'set' 'responsible' responsible=[Responsible|EString] ('stores' stores+=[WorkPieceType|EString] (","
		//	stores+=[WorkPieceType|EString])*)? ('transition' transition+=[ManufacturingSystemElement|EString] (","
		//	transition+=[ManufacturingSystemElement|EString])*)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'StoragePoint' name=EString '{' 'set' 'responsible' responsible=[Responsible|EString] ('stores'
		//stores+=[WorkPieceType|EString] ("," stores+=[WorkPieceType|EString])*)? ('transition'
		//transition+=[ManufacturingSystemElement|EString] ("," transition+=[ManufacturingSystemElement|EString])*)? '}'
		public Group getGroup() { return cGroup; }
		
		//'StoragePoint'
		public Keyword getStoragePointKeyword_0() { return cStoragePointKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'set'
		public Keyword getSetKeyword_3() { return cSetKeyword_3; }
		
		//'responsible'
		public Keyword getResponsibleKeyword_4() { return cResponsibleKeyword_4; }
		
		//responsible=[Responsible|EString]
		public Assignment getResponsibleAssignment_5() { return cResponsibleAssignment_5; }
		
		//[Responsible|EString]
		public CrossReference getResponsibleResponsibleCrossReference_5_0() { return cResponsibleResponsibleCrossReference_5_0; }
		
		//EString
		public RuleCall getResponsibleResponsibleEStringParserRuleCall_5_0_1() { return cResponsibleResponsibleEStringParserRuleCall_5_0_1; }
		
		//('stores' stores+=[WorkPieceType|EString] ("," stores+=[WorkPieceType|EString])*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'stores'
		public Keyword getStoresKeyword_6_0() { return cStoresKeyword_6_0; }
		
		//stores+=[WorkPieceType|EString]
		public Assignment getStoresAssignment_6_1() { return cStoresAssignment_6_1; }
		
		//[WorkPieceType|EString]
		public CrossReference getStoresWorkPieceTypeCrossReference_6_1_0() { return cStoresWorkPieceTypeCrossReference_6_1_0; }
		
		//EString
		public RuleCall getStoresWorkPieceTypeEStringParserRuleCall_6_1_0_1() { return cStoresWorkPieceTypeEStringParserRuleCall_6_1_0_1; }
		
		//("," stores+=[WorkPieceType|EString])*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//stores+=[WorkPieceType|EString]
		public Assignment getStoresAssignment_6_2_1() { return cStoresAssignment_6_2_1; }
		
		//[WorkPieceType|EString]
		public CrossReference getStoresWorkPieceTypeCrossReference_6_2_1_0() { return cStoresWorkPieceTypeCrossReference_6_2_1_0; }
		
		//EString
		public RuleCall getStoresWorkPieceTypeEStringParserRuleCall_6_2_1_0_1() { return cStoresWorkPieceTypeEStringParserRuleCall_6_2_1_0_1; }
		
		//('transition' transition+=[ManufacturingSystemElement|EString] ("," transition+=[ManufacturingSystemElement|EString])*)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'transition'
		public Keyword getTransitionKeyword_7_0() { return cTransitionKeyword_7_0; }
		
		//transition+=[ManufacturingSystemElement|EString]
		public Assignment getTransitionAssignment_7_1() { return cTransitionAssignment_7_1; }
		
		//[ManufacturingSystemElement|EString]
		public CrossReference getTransitionManufacturingSystemElementCrossReference_7_1_0() { return cTransitionManufacturingSystemElementCrossReference_7_1_0; }
		
		//EString
		public RuleCall getTransitionManufacturingSystemElementEStringParserRuleCall_7_1_0_1() { return cTransitionManufacturingSystemElementEStringParserRuleCall_7_1_0_1; }
		
		//("," transition+=[ManufacturingSystemElement|EString])*
		public Group getGroup_7_2() { return cGroup_7_2; }
		
		//","
		public Keyword getCommaKeyword_7_2_0() { return cCommaKeyword_7_2_0; }
		
		//transition+=[ManufacturingSystemElement|EString]
		public Assignment getTransitionAssignment_7_2_1() { return cTransitionAssignment_7_2_1; }
		
		//[ManufacturingSystemElement|EString]
		public CrossReference getTransitionManufacturingSystemElementCrossReference_7_2_1_0() { return cTransitionManufacturingSystemElementCrossReference_7_2_1_0; }
		
		//EString
		public RuleCall getTransitionManufacturingSystemElementEStringParserRuleCall_7_2_1_0_1() { return cTransitionManufacturingSystemElementEStringParserRuleCall_7_2_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class WorkPieceTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.WorkPieceType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cWorkPieceTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//WorkPieceType:
		//	{WorkPieceType} name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{WorkPieceType} name=EString
		public Group getGroup() { return cGroup; }
		
		//{WorkPieceType}
		public Action getWorkPieceTypeAction_0() { return cWorkPieceTypeAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
	}
	public class WorkPieceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.WorkPiece");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkPieceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cOfKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cHasTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cHasTypeWorkPieceTypeCrossReference_4_0 = (CrossReference)cHasTypeAssignment_4.eContents().get(0);
		private final RuleCall cHasTypeWorkPieceTypeEStringParserRuleCall_4_0_1 = (RuleCall)cHasTypeWorkPieceTypeCrossReference_4_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//WorkPiece:
		//	'WorkPiece'
		//	'{'
		//	'of' 'type' hasType=[WorkPieceType|EString]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'WorkPiece' '{' 'of' 'type' hasType=[WorkPieceType|EString] '}'
		public Group getGroup() { return cGroup; }
		
		//'WorkPiece'
		public Keyword getWorkPieceKeyword_0() { return cWorkPieceKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'of'
		public Keyword getOfKeyword_2() { return cOfKeyword_2; }
		
		//'type'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//hasType=[WorkPieceType|EString]
		public Assignment getHasTypeAssignment_4() { return cHasTypeAssignment_4; }
		
		//[WorkPieceType|EString]
		public CrossReference getHasTypeWorkPieceTypeCrossReference_4_0() { return cHasTypeWorkPieceTypeCrossReference_4_0; }
		
		//EString
		public RuleCall getHasTypeWorkPieceTypeEStringParserRuleCall_4_0_1() { return cHasTypeWorkPieceTypeEStringParserRuleCall_4_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class ResponsibleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Responsible");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cResponsibleAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Responsible:
		//	{Responsible} name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Responsible} name=EString
		public Group getGroup() { return cGroup; }
		
		//{Responsible}
		public Action getResponsibleAction_0() { return cResponsibleAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
	}
	public class ManufacturingStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.ManufacturingStep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cManufacturingStepKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSpeedKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSpeedAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSpeedEIntParserRuleCall_5_0 = (RuleCall)cSpeedAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cTransitionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTransitionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cTransitionManufacturingSystemElementCrossReference_6_1_0 = (CrossReference)cTransitionAssignment_6_1.eContents().get(0);
		private final RuleCall cTransitionManufacturingSystemElementEStringParserRuleCall_6_1_0_1 = (RuleCall)cTransitionManufacturingSystemElementCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cTransitionAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cTransitionManufacturingSystemElementCrossReference_6_2_1_0 = (CrossReference)cTransitionAssignment_6_2_1.eContents().get(0);
		private final RuleCall cTransitionManufacturingSystemElementEStringParserRuleCall_6_2_1_0_1 = (RuleCall)cTransitionManufacturingSystemElementCrossReference_6_2_1_0.eContents().get(1);
		private final Keyword cSetKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cResponsibleKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cResponsibleAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cResponsibleResponsibleCrossReference_9_0 = (CrossReference)cResponsibleAssignment_9.eContents().get(0);
		private final RuleCall cResponsibleResponsibleEStringParserRuleCall_9_0_1 = (RuleCall)cResponsibleResponsibleCrossReference_9_0.eContents().get(1);
		private final Keyword cInputKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cLeftCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cInputAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cInputInputConditionParserRuleCall_12_0 = (RuleCall)cInputAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cCommaKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cInputAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cInputInputConditionParserRuleCall_13_1_0 = (RuleCall)cInputAssignment_13_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cOutputKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cLeftCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cOutputAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cOutputOutputDecisionParserRuleCall_17_0 = (RuleCall)cOutputAssignment_17.eContents().get(0);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cCommaKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Assignment cOutputAssignment_18_1 = (Assignment)cGroup_18.eContents().get(1);
		private final RuleCall cOutputOutputDecisionParserRuleCall_18_1_0 = (RuleCall)cOutputAssignment_18_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Keyword cRightCurlyBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		
		//ManufacturingStep:
		//	'ManufacturingStep'
		//	name=EString
		//	'{'
		//	'speed' '=' speed=EInt ('transition' transition+=[ManufacturingSystemElement|EString] (","
		//	transition+=[ManufacturingSystemElement|EString])*)?
		//	'set' 'responsible' responsible=[Responsible|EString]
		//	'input' '{' input+=InputCondition ("," input+=InputCondition)* '}'
		//	'output' '{' output+=OutputDecision ("," output+=OutputDecision)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'ManufacturingStep' name=EString '{' 'speed' '=' speed=EInt ('transition'
		//transition+=[ManufacturingSystemElement|EString] ("," transition+=[ManufacturingSystemElement|EString])*)? 'set'
		//'responsible' responsible=[Responsible|EString] 'input' '{' input+=InputCondition ("," input+=InputCondition)* '}'
		//'output' '{' output+=OutputDecision ("," output+=OutputDecision)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'ManufacturingStep'
		public Keyword getManufacturingStepKeyword_0() { return cManufacturingStepKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'speed'
		public Keyword getSpeedKeyword_3() { return cSpeedKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//speed=EInt
		public Assignment getSpeedAssignment_5() { return cSpeedAssignment_5; }
		
		//EInt
		public RuleCall getSpeedEIntParserRuleCall_5_0() { return cSpeedEIntParserRuleCall_5_0; }
		
		//('transition' transition+=[ManufacturingSystemElement|EString] ("," transition+=[ManufacturingSystemElement|EString])*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'transition'
		public Keyword getTransitionKeyword_6_0() { return cTransitionKeyword_6_0; }
		
		//transition+=[ManufacturingSystemElement|EString]
		public Assignment getTransitionAssignment_6_1() { return cTransitionAssignment_6_1; }
		
		//[ManufacturingSystemElement|EString]
		public CrossReference getTransitionManufacturingSystemElementCrossReference_6_1_0() { return cTransitionManufacturingSystemElementCrossReference_6_1_0; }
		
		//EString
		public RuleCall getTransitionManufacturingSystemElementEStringParserRuleCall_6_1_0_1() { return cTransitionManufacturingSystemElementEStringParserRuleCall_6_1_0_1; }
		
		//("," transition+=[ManufacturingSystemElement|EString])*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//transition+=[ManufacturingSystemElement|EString]
		public Assignment getTransitionAssignment_6_2_1() { return cTransitionAssignment_6_2_1; }
		
		//[ManufacturingSystemElement|EString]
		public CrossReference getTransitionManufacturingSystemElementCrossReference_6_2_1_0() { return cTransitionManufacturingSystemElementCrossReference_6_2_1_0; }
		
		//EString
		public RuleCall getTransitionManufacturingSystemElementEStringParserRuleCall_6_2_1_0_1() { return cTransitionManufacturingSystemElementEStringParserRuleCall_6_2_1_0_1; }
		
		//'set'
		public Keyword getSetKeyword_7() { return cSetKeyword_7; }
		
		//'responsible'
		public Keyword getResponsibleKeyword_8() { return cResponsibleKeyword_8; }
		
		//responsible=[Responsible|EString]
		public Assignment getResponsibleAssignment_9() { return cResponsibleAssignment_9; }
		
		//[Responsible|EString]
		public CrossReference getResponsibleResponsibleCrossReference_9_0() { return cResponsibleResponsibleCrossReference_9_0; }
		
		//EString
		public RuleCall getResponsibleResponsibleEStringParserRuleCall_9_0_1() { return cResponsibleResponsibleEStringParserRuleCall_9_0_1; }
		
		//'input'
		public Keyword getInputKeyword_10() { return cInputKeyword_10; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11() { return cLeftCurlyBracketKeyword_11; }
		
		//input+=InputCondition
		public Assignment getInputAssignment_12() { return cInputAssignment_12; }
		
		//InputCondition
		public RuleCall getInputInputConditionParserRuleCall_12_0() { return cInputInputConditionParserRuleCall_12_0; }
		
		//("," input+=InputCondition)*
		public Group getGroup_13() { return cGroup_13; }
		
		//","
		public Keyword getCommaKeyword_13_0() { return cCommaKeyword_13_0; }
		
		//input+=InputCondition
		public Assignment getInputAssignment_13_1() { return cInputAssignment_13_1; }
		
		//InputCondition
		public RuleCall getInputInputConditionParserRuleCall_13_1_0() { return cInputInputConditionParserRuleCall_13_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
		
		//'output'
		public Keyword getOutputKeyword_15() { return cOutputKeyword_15; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_16() { return cLeftCurlyBracketKeyword_16; }
		
		//output+=OutputDecision
		public Assignment getOutputAssignment_17() { return cOutputAssignment_17; }
		
		//OutputDecision
		public RuleCall getOutputOutputDecisionParserRuleCall_17_0() { return cOutputOutputDecisionParserRuleCall_17_0; }
		
		//("," output+=OutputDecision)*
		public Group getGroup_18() { return cGroup_18; }
		
		//","
		public Keyword getCommaKeyword_18_0() { return cCommaKeyword_18_0; }
		
		//output+=OutputDecision
		public Assignment getOutputAssignment_18_1() { return cOutputAssignment_18_1; }
		
		//OutputDecision
		public RuleCall getOutputOutputDecisionParserRuleCall_18_1_0() { return cOutputOutputDecisionParserRuleCall_18_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_20() { return cRightCurlyBracketKeyword_20; }
	}
	public class TransportStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.TransportStep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransportStepKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSpeedKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSpeedAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSpeedEIntParserRuleCall_5_0 = (RuleCall)cSpeedAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cTransitionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTransitionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cTransitionManufacturingSystemElementCrossReference_6_1_0 = (CrossReference)cTransitionAssignment_6_1.eContents().get(0);
		private final RuleCall cTransitionManufacturingSystemElementEStringParserRuleCall_6_1_0_1 = (RuleCall)cTransitionManufacturingSystemElementCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cTransitionAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cTransitionManufacturingSystemElementCrossReference_6_2_1_0 = (CrossReference)cTransitionAssignment_6_2_1.eContents().get(0);
		private final RuleCall cTransitionManufacturingSystemElementEStringParserRuleCall_6_2_1_0_1 = (RuleCall)cTransitionManufacturingSystemElementCrossReference_6_2_1_0.eContents().get(1);
		private final Keyword cSetKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cResponsibleKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cResponsibleAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cResponsibleResponsibleCrossReference_9_0 = (CrossReference)cResponsibleAssignment_9.eContents().get(0);
		private final RuleCall cResponsibleResponsibleEStringParserRuleCall_9_0_1 = (RuleCall)cResponsibleResponsibleCrossReference_9_0.eContents().get(1);
		private final Keyword cInputKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cLeftCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cInputAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cInputInputConditionParserRuleCall_12_0 = (RuleCall)cInputAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cCommaKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cInputAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cInputInputConditionParserRuleCall_13_1_0 = (RuleCall)cInputAssignment_13_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cOutputKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cLeftCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cOutputAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cOutputOutputDecisionParserRuleCall_17_0 = (RuleCall)cOutputAssignment_17.eContents().get(0);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cCommaKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Assignment cOutputAssignment_18_1 = (Assignment)cGroup_18.eContents().get(1);
		private final RuleCall cOutputOutputDecisionParserRuleCall_18_1_0 = (RuleCall)cOutputAssignment_18_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Keyword cRightCurlyBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		
		//TransportStep:
		//	'TransportStep'
		//	name=EString
		//	'{'
		//	'speed' '=' speed=EInt ('transition' transition+=[ManufacturingSystemElement|EString] (","
		//	transition+=[ManufacturingSystemElement|EString])*)?
		//	'set' 'responsible' responsible=[Responsible|EString]
		//	'input' '{' input+=InputCondition ("," input+=InputCondition)* '}'
		//	//output? isnt this just transporting workpieces?
		//	'output' '{' output+=OutputDecision ("," output+=OutputDecision)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'TransportStep' name=EString '{' 'speed' '=' speed=EInt ('transition' transition+=[ManufacturingSystemElement|EString]
		//("," transition+=[ManufacturingSystemElement|EString])*)? 'set' 'responsible' responsible=[Responsible|EString]
		//'input' '{' input+=InputCondition ("," input+=InputCondition)* '}' //output? isnt this just transporting workpieces?
		//'output' '{' output+=OutputDecision ("," output+=OutputDecision)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'TransportStep'
		public Keyword getTransportStepKeyword_0() { return cTransportStepKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'speed'
		public Keyword getSpeedKeyword_3() { return cSpeedKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//speed=EInt
		public Assignment getSpeedAssignment_5() { return cSpeedAssignment_5; }
		
		//EInt
		public RuleCall getSpeedEIntParserRuleCall_5_0() { return cSpeedEIntParserRuleCall_5_0; }
		
		//('transition' transition+=[ManufacturingSystemElement|EString] ("," transition+=[ManufacturingSystemElement|EString])*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'transition'
		public Keyword getTransitionKeyword_6_0() { return cTransitionKeyword_6_0; }
		
		//transition+=[ManufacturingSystemElement|EString]
		public Assignment getTransitionAssignment_6_1() { return cTransitionAssignment_6_1; }
		
		//[ManufacturingSystemElement|EString]
		public CrossReference getTransitionManufacturingSystemElementCrossReference_6_1_0() { return cTransitionManufacturingSystemElementCrossReference_6_1_0; }
		
		//EString
		public RuleCall getTransitionManufacturingSystemElementEStringParserRuleCall_6_1_0_1() { return cTransitionManufacturingSystemElementEStringParserRuleCall_6_1_0_1; }
		
		//("," transition+=[ManufacturingSystemElement|EString])*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//transition+=[ManufacturingSystemElement|EString]
		public Assignment getTransitionAssignment_6_2_1() { return cTransitionAssignment_6_2_1; }
		
		//[ManufacturingSystemElement|EString]
		public CrossReference getTransitionManufacturingSystemElementCrossReference_6_2_1_0() { return cTransitionManufacturingSystemElementCrossReference_6_2_1_0; }
		
		//EString
		public RuleCall getTransitionManufacturingSystemElementEStringParserRuleCall_6_2_1_0_1() { return cTransitionManufacturingSystemElementEStringParserRuleCall_6_2_1_0_1; }
		
		//'set'
		public Keyword getSetKeyword_7() { return cSetKeyword_7; }
		
		//'responsible'
		public Keyword getResponsibleKeyword_8() { return cResponsibleKeyword_8; }
		
		//responsible=[Responsible|EString]
		public Assignment getResponsibleAssignment_9() { return cResponsibleAssignment_9; }
		
		//[Responsible|EString]
		public CrossReference getResponsibleResponsibleCrossReference_9_0() { return cResponsibleResponsibleCrossReference_9_0; }
		
		//EString
		public RuleCall getResponsibleResponsibleEStringParserRuleCall_9_0_1() { return cResponsibleResponsibleEStringParserRuleCall_9_0_1; }
		
		//'input'
		public Keyword getInputKeyword_10() { return cInputKeyword_10; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11() { return cLeftCurlyBracketKeyword_11; }
		
		//input+=InputCondition
		public Assignment getInputAssignment_12() { return cInputAssignment_12; }
		
		//InputCondition
		public RuleCall getInputInputConditionParserRuleCall_12_0() { return cInputInputConditionParserRuleCall_12_0; }
		
		//("," input+=InputCondition)*
		public Group getGroup_13() { return cGroup_13; }
		
		//","
		public Keyword getCommaKeyword_13_0() { return cCommaKeyword_13_0; }
		
		//input+=InputCondition
		public Assignment getInputAssignment_13_1() { return cInputAssignment_13_1; }
		
		//InputCondition
		public RuleCall getInputInputConditionParserRuleCall_13_1_0() { return cInputInputConditionParserRuleCall_13_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
		
		////output? isnt this just transporting workpieces?
		//'output'
		public Keyword getOutputKeyword_15() { return cOutputKeyword_15; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_16() { return cLeftCurlyBracketKeyword_16; }
		
		//output+=OutputDecision
		public Assignment getOutputAssignment_17() { return cOutputAssignment_17; }
		
		//OutputDecision
		public RuleCall getOutputOutputDecisionParserRuleCall_17_0() { return cOutputOutputDecisionParserRuleCall_17_0; }
		
		//("," output+=OutputDecision)*
		public Group getGroup_18() { return cGroup_18; }
		
		//","
		public Keyword getCommaKeyword_18_0() { return cCommaKeyword_18_0; }
		
		//output+=OutputDecision
		public Assignment getOutputAssignment_18_1() { return cOutputAssignment_18_1; }
		
		//OutputDecision
		public RuleCall getOutputOutputDecisionParserRuleCall_18_1_0() { return cOutputOutputDecisionParserRuleCall_18_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_20() { return cRightCurlyBracketKeyword_20; }
	}
	public class QualityAssuranceStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.QualityAssuranceStep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cQualityAssuranceStepKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSpeedKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSpeedAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSpeedEIntParserRuleCall_5_0 = (RuleCall)cSpeedAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cTransitionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTransitionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cTransitionManufacturingSystemElementCrossReference_6_1_0 = (CrossReference)cTransitionAssignment_6_1.eContents().get(0);
		private final RuleCall cTransitionManufacturingSystemElementEStringParserRuleCall_6_1_0_1 = (RuleCall)cTransitionManufacturingSystemElementCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cTransitionAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cTransitionManufacturingSystemElementCrossReference_6_2_1_0 = (CrossReference)cTransitionAssignment_6_2_1.eContents().get(0);
		private final RuleCall cTransitionManufacturingSystemElementEStringParserRuleCall_6_2_1_0_1 = (RuleCall)cTransitionManufacturingSystemElementCrossReference_6_2_1_0.eContents().get(1);
		private final Keyword cSetKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cResponsibleKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cResponsibleAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cResponsibleResponsibleCrossReference_9_0 = (CrossReference)cResponsibleAssignment_9.eContents().get(0);
		private final RuleCall cResponsibleResponsibleEStringParserRuleCall_9_0_1 = (RuleCall)cResponsibleResponsibleCrossReference_9_0.eContents().get(1);
		private final Keyword cInputKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cLeftCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cInputAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cInputInputConditionParserRuleCall_12_0 = (RuleCall)cInputAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cCommaKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cInputAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cInputInputConditionParserRuleCall_13_1_0 = (RuleCall)cInputAssignment_13_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cOutputKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cLeftCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cOutputAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cOutputOutputDecisionParserRuleCall_17_0 = (RuleCall)cOutputAssignment_17.eContents().get(0);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cCommaKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Assignment cOutputAssignment_18_1 = (Assignment)cGroup_18.eContents().get(1);
		private final RuleCall cOutputOutputDecisionParserRuleCall_18_1_0 = (RuleCall)cOutputAssignment_18_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Keyword cRightCurlyBracketKeyword_20 = (Keyword)cGroup.eContents().get(20);
		
		//QualityAssuranceStep:
		//	'QualityAssuranceStep'
		//	name=EString
		//	'{'
		//	'speed' '=' speed=EInt ('transition' transition+=[ManufacturingSystemElement|EString] (","
		//	transition+=[ManufacturingSystemElement|EString])*)?
		//	'set' 'responsible' responsible=[Responsible|EString]
		//	'input' '{' input+=InputCondition ("," input+=InputCondition)* '}'
		//	'output' '{' output+=OutputDecision ("," output+=OutputDecision)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'QualityAssuranceStep' name=EString '{' 'speed' '=' speed=EInt ('transition'
		//transition+=[ManufacturingSystemElement|EString] ("," transition+=[ManufacturingSystemElement|EString])*)? 'set'
		//'responsible' responsible=[Responsible|EString] 'input' '{' input+=InputCondition ("," input+=InputCondition)* '}'
		//'output' '{' output+=OutputDecision ("," output+=OutputDecision)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'QualityAssuranceStep'
		public Keyword getQualityAssuranceStepKeyword_0() { return cQualityAssuranceStepKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'speed'
		public Keyword getSpeedKeyword_3() { return cSpeedKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//speed=EInt
		public Assignment getSpeedAssignment_5() { return cSpeedAssignment_5; }
		
		//EInt
		public RuleCall getSpeedEIntParserRuleCall_5_0() { return cSpeedEIntParserRuleCall_5_0; }
		
		//('transition' transition+=[ManufacturingSystemElement|EString] ("," transition+=[ManufacturingSystemElement|EString])*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'transition'
		public Keyword getTransitionKeyword_6_0() { return cTransitionKeyword_6_0; }
		
		//transition+=[ManufacturingSystemElement|EString]
		public Assignment getTransitionAssignment_6_1() { return cTransitionAssignment_6_1; }
		
		//[ManufacturingSystemElement|EString]
		public CrossReference getTransitionManufacturingSystemElementCrossReference_6_1_0() { return cTransitionManufacturingSystemElementCrossReference_6_1_0; }
		
		//EString
		public RuleCall getTransitionManufacturingSystemElementEStringParserRuleCall_6_1_0_1() { return cTransitionManufacturingSystemElementEStringParserRuleCall_6_1_0_1; }
		
		//("," transition+=[ManufacturingSystemElement|EString])*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//transition+=[ManufacturingSystemElement|EString]
		public Assignment getTransitionAssignment_6_2_1() { return cTransitionAssignment_6_2_1; }
		
		//[ManufacturingSystemElement|EString]
		public CrossReference getTransitionManufacturingSystemElementCrossReference_6_2_1_0() { return cTransitionManufacturingSystemElementCrossReference_6_2_1_0; }
		
		//EString
		public RuleCall getTransitionManufacturingSystemElementEStringParserRuleCall_6_2_1_0_1() { return cTransitionManufacturingSystemElementEStringParserRuleCall_6_2_1_0_1; }
		
		//'set'
		public Keyword getSetKeyword_7() { return cSetKeyword_7; }
		
		//'responsible'
		public Keyword getResponsibleKeyword_8() { return cResponsibleKeyword_8; }
		
		//responsible=[Responsible|EString]
		public Assignment getResponsibleAssignment_9() { return cResponsibleAssignment_9; }
		
		//[Responsible|EString]
		public CrossReference getResponsibleResponsibleCrossReference_9_0() { return cResponsibleResponsibleCrossReference_9_0; }
		
		//EString
		public RuleCall getResponsibleResponsibleEStringParserRuleCall_9_0_1() { return cResponsibleResponsibleEStringParserRuleCall_9_0_1; }
		
		//'input'
		public Keyword getInputKeyword_10() { return cInputKeyword_10; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11() { return cLeftCurlyBracketKeyword_11; }
		
		//input+=InputCondition
		public Assignment getInputAssignment_12() { return cInputAssignment_12; }
		
		//InputCondition
		public RuleCall getInputInputConditionParserRuleCall_12_0() { return cInputInputConditionParserRuleCall_12_0; }
		
		//("," input+=InputCondition)*
		public Group getGroup_13() { return cGroup_13; }
		
		//","
		public Keyword getCommaKeyword_13_0() { return cCommaKeyword_13_0; }
		
		//input+=InputCondition
		public Assignment getInputAssignment_13_1() { return cInputAssignment_13_1; }
		
		//InputCondition
		public RuleCall getInputInputConditionParserRuleCall_13_1_0() { return cInputInputConditionParserRuleCall_13_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
		
		//'output'
		public Keyword getOutputKeyword_15() { return cOutputKeyword_15; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_16() { return cLeftCurlyBracketKeyword_16; }
		
		//output+=OutputDecision
		public Assignment getOutputAssignment_17() { return cOutputAssignment_17; }
		
		//OutputDecision
		public RuleCall getOutputOutputDecisionParserRuleCall_17_0() { return cOutputOutputDecisionParserRuleCall_17_0; }
		
		//("," output+=OutputDecision)*
		public Group getGroup_18() { return cGroup_18; }
		
		//","
		public Keyword getCommaKeyword_18_0() { return cCommaKeyword_18_0; }
		
		//output+=OutputDecision
		public Assignment getOutputAssignment_18_1() { return cOutputAssignment_18_1; }
		
		//OutputDecision
		public RuleCall getOutputOutputDecisionParserRuleCall_18_1_0() { return cOutputOutputDecisionParserRuleCall_18_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_20() { return cRightCurlyBracketKeyword_20; }
	}
	public class CompositeManufacturingStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.CompositeManufacturingStep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCompositeManufacturingStepKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cSpeedKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSpeedAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSpeedEIntParserRuleCall_5_0 = (RuleCall)cSpeedAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cTransitionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cTransitionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cTransitionManufacturingSystemElementCrossReference_6_1_0 = (CrossReference)cTransitionAssignment_6_1.eContents().get(0);
		private final RuleCall cTransitionManufacturingSystemElementEStringParserRuleCall_6_1_0_1 = (RuleCall)cTransitionManufacturingSystemElementCrossReference_6_1_0.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cTransitionAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cTransitionManufacturingSystemElementCrossReference_6_2_1_0 = (CrossReference)cTransitionAssignment_6_2_1.eContents().get(0);
		private final RuleCall cTransitionManufacturingSystemElementEStringParserRuleCall_6_2_1_0_1 = (RuleCall)cTransitionManufacturingSystemElementCrossReference_6_2_1_0.eContents().get(1);
		private final Keyword cSetKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cResponsibleKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cResponsibleAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final CrossReference cResponsibleResponsibleCrossReference_9_0 = (CrossReference)cResponsibleAssignment_9.eContents().get(0);
		private final RuleCall cResponsibleResponsibleEStringParserRuleCall_9_0_1 = (RuleCall)cResponsibleResponsibleCrossReference_9_0.eContents().get(1);
		private final Keyword cInputKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cLeftCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Assignment cInputAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cInputInputConditionParserRuleCall_12_0 = (RuleCall)cInputAssignment_12.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cCommaKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cInputAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cInputInputConditionParserRuleCall_13_1_0 = (RuleCall)cInputAssignment_13_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cOutputKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cLeftCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cOutputAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cOutputOutputDecisionParserRuleCall_17_0 = (RuleCall)cOutputAssignment_17.eContents().get(0);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cCommaKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Assignment cOutputAssignment_18_1 = (Assignment)cGroup_18.eContents().get(1);
		private final RuleCall cOutputOutputDecisionParserRuleCall_18_1_0 = (RuleCall)cOutputAssignment_18_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Keyword cContainsKeyword_20 = (Keyword)cGroup.eContents().get(20);
		private final Assignment cContainsAssignment_21 = (Assignment)cGroup.eContents().get(21);
		private final RuleCall cContainsManufacturingSystemParserRuleCall_21_0 = (RuleCall)cContainsAssignment_21.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_22 = (Keyword)cGroup.eContents().get(22);
		
		////ok this is the manufacturing step
		//CompositeManufacturingStep:
		//	'CompositeManufacturingStep'
		//	name=EString
		//	'{'
		//	'speed' '=' speed=EInt ('transition' transition+=[ManufacturingSystemElement|EString] (","
		//	transition+=[ManufacturingSystemElement|EString])*)?
		//	'set' 'responsible' responsible=[Responsible|EString]
		//	'input' '{' input+=InputCondition ("," input+=InputCondition)* '}'
		//	'output' '{' output+=OutputDecision ("," output+=OutputDecision)* '}'
		//	'contains' contains=ManufacturingSystem
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'CompositeManufacturingStep' name=EString '{' 'speed' '=' speed=EInt ('transition'
		//transition+=[ManufacturingSystemElement|EString] ("," transition+=[ManufacturingSystemElement|EString])*)? 'set'
		//'responsible' responsible=[Responsible|EString] 'input' '{' input+=InputCondition ("," input+=InputCondition)* '}'
		//'output' '{' output+=OutputDecision ("," output+=OutputDecision)* '}' 'contains' contains=ManufacturingSystem '}'
		public Group getGroup() { return cGroup; }
		
		//'CompositeManufacturingStep'
		public Keyword getCompositeManufacturingStepKeyword_0() { return cCompositeManufacturingStepKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'speed'
		public Keyword getSpeedKeyword_3() { return cSpeedKeyword_3; }
		
		//'='
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }
		
		//speed=EInt
		public Assignment getSpeedAssignment_5() { return cSpeedAssignment_5; }
		
		//EInt
		public RuleCall getSpeedEIntParserRuleCall_5_0() { return cSpeedEIntParserRuleCall_5_0; }
		
		//('transition' transition+=[ManufacturingSystemElement|EString] ("," transition+=[ManufacturingSystemElement|EString])*)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'transition'
		public Keyword getTransitionKeyword_6_0() { return cTransitionKeyword_6_0; }
		
		//transition+=[ManufacturingSystemElement|EString]
		public Assignment getTransitionAssignment_6_1() { return cTransitionAssignment_6_1; }
		
		//[ManufacturingSystemElement|EString]
		public CrossReference getTransitionManufacturingSystemElementCrossReference_6_1_0() { return cTransitionManufacturingSystemElementCrossReference_6_1_0; }
		
		//EString
		public RuleCall getTransitionManufacturingSystemElementEStringParserRuleCall_6_1_0_1() { return cTransitionManufacturingSystemElementEStringParserRuleCall_6_1_0_1; }
		
		//("," transition+=[ManufacturingSystemElement|EString])*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }
		
		//transition+=[ManufacturingSystemElement|EString]
		public Assignment getTransitionAssignment_6_2_1() { return cTransitionAssignment_6_2_1; }
		
		//[ManufacturingSystemElement|EString]
		public CrossReference getTransitionManufacturingSystemElementCrossReference_6_2_1_0() { return cTransitionManufacturingSystemElementCrossReference_6_2_1_0; }
		
		//EString
		public RuleCall getTransitionManufacturingSystemElementEStringParserRuleCall_6_2_1_0_1() { return cTransitionManufacturingSystemElementEStringParserRuleCall_6_2_1_0_1; }
		
		//'set'
		public Keyword getSetKeyword_7() { return cSetKeyword_7; }
		
		//'responsible'
		public Keyword getResponsibleKeyword_8() { return cResponsibleKeyword_8; }
		
		//responsible=[Responsible|EString]
		public Assignment getResponsibleAssignment_9() { return cResponsibleAssignment_9; }
		
		//[Responsible|EString]
		public CrossReference getResponsibleResponsibleCrossReference_9_0() { return cResponsibleResponsibleCrossReference_9_0; }
		
		//EString
		public RuleCall getResponsibleResponsibleEStringParserRuleCall_9_0_1() { return cResponsibleResponsibleEStringParserRuleCall_9_0_1; }
		
		//'input'
		public Keyword getInputKeyword_10() { return cInputKeyword_10; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_11() { return cLeftCurlyBracketKeyword_11; }
		
		//input+=InputCondition
		public Assignment getInputAssignment_12() { return cInputAssignment_12; }
		
		//InputCondition
		public RuleCall getInputInputConditionParserRuleCall_12_0() { return cInputInputConditionParserRuleCall_12_0; }
		
		//("," input+=InputCondition)*
		public Group getGroup_13() { return cGroup_13; }
		
		//","
		public Keyword getCommaKeyword_13_0() { return cCommaKeyword_13_0; }
		
		//input+=InputCondition
		public Assignment getInputAssignment_13_1() { return cInputAssignment_13_1; }
		
		//InputCondition
		public RuleCall getInputInputConditionParserRuleCall_13_1_0() { return cInputInputConditionParserRuleCall_13_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
		
		//'output'
		public Keyword getOutputKeyword_15() { return cOutputKeyword_15; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_16() { return cLeftCurlyBracketKeyword_16; }
		
		//output+=OutputDecision
		public Assignment getOutputAssignment_17() { return cOutputAssignment_17; }
		
		//OutputDecision
		public RuleCall getOutputOutputDecisionParserRuleCall_17_0() { return cOutputOutputDecisionParserRuleCall_17_0; }
		
		//("," output+=OutputDecision)*
		public Group getGroup_18() { return cGroup_18; }
		
		//","
		public Keyword getCommaKeyword_18_0() { return cCommaKeyword_18_0; }
		
		//output+=OutputDecision
		public Assignment getOutputAssignment_18_1() { return cOutputAssignment_18_1; }
		
		//OutputDecision
		public RuleCall getOutputOutputDecisionParserRuleCall_18_1_0() { return cOutputOutputDecisionParserRuleCall_18_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
		
		//'contains'
		public Keyword getContainsKeyword_20() { return cContainsKeyword_20; }
		
		//contains=ManufacturingSystem
		public Assignment getContainsAssignment_21() { return cContainsAssignment_21; }
		
		//ManufacturingSystem
		public RuleCall getContainsManufacturingSystemParserRuleCall_21_0() { return cContainsManufacturingSystemParserRuleCall_21_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_22() { return cRightCurlyBracketKeyword_22; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class InputCondition_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.InputCondition_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInputConditionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInputConditionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		////ok this is the  condition but we just create one?
		//InputCondition_Impl InputCondition:
		//	{InputCondition}
		//	'InputCondition'
		//	name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{InputCondition} 'InputCondition' name=EString
		public Group getGroup() { return cGroup; }
		
		//{InputCondition}
		public Action getInputConditionAction_0() { return cInputConditionAction_0; }
		
		//'InputCondition'
		public Keyword getInputConditionKeyword_1() { return cInputConditionKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class OutputDecisionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.OutputDecision");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cOutputKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cTypeKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cOutputTypesAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final CrossReference cOutputTypesWorkPieceTypeCrossReference_0_2_0 = (CrossReference)cOutputTypesAssignment_0_2.eContents().get(0);
		private final RuleCall cOutputTypesWorkPieceTypeEStringParserRuleCall_0_2_0_1 = (RuleCall)cOutputTypesWorkPieceTypeCrossReference_0_2_0.eContents().get(1);
		private final Keyword cInputKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cConditionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInputAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cInputInputConditionCrossReference_3_0 = (CrossReference)cInputAssignment_3.eContents().get(0);
		private final RuleCall cInputInputConditionEStringParserRuleCall_3_0_1 = (RuleCall)cInputInputConditionCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInputAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cInputInputConditionCrossReference_4_1_0 = (CrossReference)cInputAssignment_4_1.eContents().get(0);
		private final RuleCall cInputInputConditionEStringParserRuleCall_4_1_0_1 = (RuleCall)cInputInputConditionCrossReference_4_1_0.eContents().get(1);
		
		////somehow related to the condition but why is the type optional
		//OutputDecision:
		//	('output' 'type' outputTypes=[WorkPieceType|EString])?
		//	'input' 'condition' input+=[InputCondition|EString] ("," input+=[InputCondition|EString])*;
		@Override public ParserRule getRule() { return rule; }
		
		//('output' 'type' outputTypes=[WorkPieceType|EString])? 'input' 'condition' input+=[InputCondition|EString] (","
		//input+=[InputCondition|EString])*
		public Group getGroup() { return cGroup; }
		
		//('output' 'type' outputTypes=[WorkPieceType|EString])?
		public Group getGroup_0() { return cGroup_0; }
		
		//'output'
		public Keyword getOutputKeyword_0_0() { return cOutputKeyword_0_0; }
		
		//'type'
		public Keyword getTypeKeyword_0_1() { return cTypeKeyword_0_1; }
		
		//outputTypes=[WorkPieceType|EString]
		public Assignment getOutputTypesAssignment_0_2() { return cOutputTypesAssignment_0_2; }
		
		//[WorkPieceType|EString]
		public CrossReference getOutputTypesWorkPieceTypeCrossReference_0_2_0() { return cOutputTypesWorkPieceTypeCrossReference_0_2_0; }
		
		//EString
		public RuleCall getOutputTypesWorkPieceTypeEStringParserRuleCall_0_2_0_1() { return cOutputTypesWorkPieceTypeEStringParserRuleCall_0_2_0_1; }
		
		//'input'
		public Keyword getInputKeyword_1() { return cInputKeyword_1; }
		
		//'condition'
		public Keyword getConditionKeyword_2() { return cConditionKeyword_2; }
		
		//input+=[InputCondition|EString]
		public Assignment getInputAssignment_3() { return cInputAssignment_3; }
		
		//[InputCondition|EString]
		public CrossReference getInputInputConditionCrossReference_3_0() { return cInputInputConditionCrossReference_3_0; }
		
		//EString
		public RuleCall getInputInputConditionEStringParserRuleCall_3_0_1() { return cInputInputConditionEStringParserRuleCall_3_0_1; }
		
		//("," input+=[InputCondition|EString])*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//input+=[InputCondition|EString]
		public Assignment getInputAssignment_4_1() { return cInputAssignment_4_1; }
		
		//[InputCondition|EString]
		public CrossReference getInputInputConditionCrossReference_4_1_0() { return cInputInputConditionCrossReference_4_1_0; }
		
		//EString
		public RuleCall getInputInputConditionEStringParserRuleCall_4_1_0_1() { return cInputInputConditionEStringParserRuleCall_4_1_0_1; }
	}
	public class WorkPieceConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.WorkPieceCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cRequiresKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRequiresTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cRequiresTypeWorkPieceTypeCrossReference_4_0 = (CrossReference)cRequiresTypeAssignment_4.eContents().get(0);
		private final RuleCall cRequiresTypeWorkPieceTypeEStringParserRuleCall_4_0_1 = (RuleCall)cRequiresTypeWorkPieceTypeCrossReference_4_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////set workpiece type on condition
		//WorkPieceCondition:
		//	name=EString
		//	'{'
		//	'requires' 'type' requiresType=[WorkPieceType|EString]
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString '{' 'requires' 'type' requiresType=[WorkPieceType|EString] '}'
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'requires'
		public Keyword getRequiresKeyword_2() { return cRequiresKeyword_2; }
		
		//'type'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//requiresType=[WorkPieceType|EString]
		public Assignment getRequiresTypeAssignment_4() { return cRequiresTypeAssignment_4; }
		
		//[WorkPieceType|EString]
		public CrossReference getRequiresTypeWorkPieceTypeCrossReference_4_0() { return cRequiresTypeWorkPieceTypeCrossReference_4_0; }
		
		//EString
		public RuleCall getRequiresTypeWorkPieceTypeEStringParserRuleCall_4_0_1() { return cRequiresTypeWorkPieceTypeEStringParserRuleCall_4_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class BinaryConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.BinaryCondition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBinaryConditionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLeftAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cLeftInputConditionCrossReference_4_0 = (CrossReference)cLeftAssignment_4.eContents().get(0);
		private final RuleCall cLeftInputConditionEStringParserRuleCall_4_0_1 = (RuleCall)cLeftInputConditionCrossReference_4_0.eContents().get(1);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTypeBinaryTypeEnumRuleCall_5_0 = (RuleCall)cTypeAssignment_5.eContents().get(0);
		private final Keyword cRightKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cRightAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cRightInputConditionCrossReference_7_0 = (CrossReference)cRightAssignment_7.eContents().get(0);
		private final RuleCall cRightInputConditionEStringParserRuleCall_7_0_1 = (RuleCall)cRightInputConditionCrossReference_7_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		////this i dont get exactly what and how it does it
		////left input condition and right input condition...what?
		//BinaryCondition:
		//	'BinaryCondition'
		//	name=EString
		//	'{'
		//	'left' left=[InputCondition|EString] type=BinaryType 'right' right=[InputCondition|EString]
		//	/*
		//		'left' left=[InputCondition|EString]
		//		'right' right=[InputCondition|EString]
		//		*/
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'BinaryCondition' name=EString '{' 'left' left=[InputCondition|EString] type=BinaryType 'right'
		//right=[InputCondition|EString] /*
		//		'left' left=[InputCondition|EString]
		//		'right' right=[InputCondition|EString]
		//		*/ '}'
		public Group getGroup() { return cGroup; }
		
		//'BinaryCondition'
		public Keyword getBinaryConditionKeyword_0() { return cBinaryConditionKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'left'
		public Keyword getLeftKeyword_3() { return cLeftKeyword_3; }
		
		//left=[InputCondition|EString]
		public Assignment getLeftAssignment_4() { return cLeftAssignment_4; }
		
		//[InputCondition|EString]
		public CrossReference getLeftInputConditionCrossReference_4_0() { return cLeftInputConditionCrossReference_4_0; }
		
		//EString
		public RuleCall getLeftInputConditionEStringParserRuleCall_4_0_1() { return cLeftInputConditionEStringParserRuleCall_4_0_1; }
		
		//type=BinaryType
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }
		
		//BinaryType
		public RuleCall getTypeBinaryTypeEnumRuleCall_5_0() { return cTypeBinaryTypeEnumRuleCall_5_0; }
		
		//'right'
		public Keyword getRightKeyword_6() { return cRightKeyword_6; }
		
		//right=[InputCondition|EString]
		public Assignment getRightAssignment_7() { return cRightAssignment_7; }
		
		//[InputCondition|EString]
		public CrossReference getRightInputConditionCrossReference_7_0() { return cRightInputConditionCrossReference_7_0; }
		
		//EString
		public RuleCall getRightInputConditionEStringParserRuleCall_7_0_1() { return cRightInputConditionEStringParserRuleCall_7_0_1; }
		
		///*
		//		'left' left=[InputCondition|EString]
		//		'right' right=[InputCondition|EString]
		//		*/ '}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class NegationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Negation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNegationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cContainsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cConditionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cContainsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cContainsInputConditionCrossReference_6_0 = (CrossReference)cContainsAssignment_6.eContents().get(0);
		private final RuleCall cContainsInputConditionEStringParserRuleCall_6_0_1 = (RuleCall)cContainsInputConditionCrossReference_6_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		////Question mark?
		//Negation:
		//	'Negation'
		//	name=EString
		//	'{'
		//	'contains' '{' 'condition' contains=[InputCondition|EString] '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Negation' name=EString '{' 'contains' '{' 'condition' contains=[InputCondition|EString] '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'Negation'
		public Keyword getNegationKeyword_0() { return cNegationKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'contains'
		public Keyword getContainsKeyword_3() { return cContainsKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//'condition'
		public Keyword getConditionKeyword_5() { return cConditionKeyword_5; }
		
		//contains=[InputCondition|EString]
		public Assignment getContainsAssignment_6() { return cContainsAssignment_6; }
		
		//[InputCondition|EString]
		public CrossReference getContainsInputConditionCrossReference_6_0() { return cContainsInputConditionCrossReference_6_0; }
		
		//EString
		public RuleCall getContainsInputConditionEStringParserRuleCall_6_0_1() { return cContainsInputConditionEStringParserRuleCall_6_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	
	public class BinaryTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.BinaryType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAndEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAndAndKeyword_0_0 = (Keyword)cAndEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOrEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOrOrKeyword_1_0 = (Keyword)cOrEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum BinaryType:
		//	and | or;
		public EnumRule getRule() { return rule; }
		
		//and | or
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//and
		public EnumLiteralDeclaration getAndEnumLiteralDeclaration_0() { return cAndEnumLiteralDeclaration_0; }
		
		//'and'
		public Keyword getAndAndKeyword_0_0() { return cAndAndKeyword_0_0; }
		
		//or
		public EnumLiteralDeclaration getOrEnumLiteralDeclaration_1() { return cOrEnumLiteralDeclaration_1; }
		
		//'or'
		public Keyword getOrOrKeyword_1_0() { return cOrOrKeyword_1_0; }
	}
	
	private final ManufacturingSystemElements pManufacturingSystem;
	private final ManufacturingSystemElementElements pManufacturingSystemElement;
	private final InputConditionElements pInputCondition;
	private final ManufacturingSystemElement_ImplElements pManufacturingSystemElement_Impl;
	private final StoragePointElements pStoragePoint;
	private final WorkPieceTypeElements pWorkPieceType;
	private final WorkPieceElements pWorkPiece;
	private final EStringElements pEString;
	private final ResponsibleElements pResponsible;
	private final ManufacturingStepElements pManufacturingStep;
	private final TransportStepElements pTransportStep;
	private final QualityAssuranceStepElements pQualityAssuranceStep;
	private final CompositeManufacturingStepElements pCompositeManufacturingStep;
	private final EIntElements pEInt;
	private final InputCondition_ImplElements pInputCondition_Impl;
	private final OutputDecisionElements pOutputDecision;
	private final WorkPieceConditionElements pWorkPieceCondition;
	private final BinaryConditionElements pBinaryCondition;
	private final NegationElements pNegation;
	private final BinaryTypeElements eBinaryType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pManufacturingSystem = new ManufacturingSystemElements();
		this.pManufacturingSystemElement = new ManufacturingSystemElementElements();
		this.pInputCondition = new InputConditionElements();
		this.pManufacturingSystemElement_Impl = new ManufacturingSystemElement_ImplElements();
		this.pStoragePoint = new StoragePointElements();
		this.pWorkPieceType = new WorkPieceTypeElements();
		this.pWorkPiece = new WorkPieceElements();
		this.pEString = new EStringElements();
		this.pResponsible = new ResponsibleElements();
		this.pManufacturingStep = new ManufacturingStepElements();
		this.pTransportStep = new TransportStepElements();
		this.pQualityAssuranceStep = new QualityAssuranceStepElements();
		this.pCompositeManufacturingStep = new CompositeManufacturingStepElements();
		this.pEInt = new EIntElements();
		this.pInputCondition_Impl = new InputCondition_ImplElements();
		this.pOutputDecision = new OutputDecisionElements();
		this.pWorkPieceCondition = new WorkPieceConditionElements();
		this.pBinaryCondition = new BinaryConditionElements();
		this.pNegation = new NegationElements();
		this.eBinaryType = new BinaryTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//ManufacturingSystem:
	//	'ManufacturingSystem'
	//	name=EString
	//	'{'
	//	'set' 'start' 'storage' start+=[StoragePoint|EString] ("," start+=[StoragePoint|EString])*
	//	'set' 'end' 'storage' end+=[StoragePoint|EString] ("," end+=[StoragePoint|EString])*
	//	'create' 'responsible' staff+=Responsible ("," staff+=Responsible)*
	//	'set' 'lead' 'responsible' responsible=[Responsible|EString] ('workpiece' 'type' uses+=WorkPieceType (","
	//	uses+=WorkPieceType)*)? ('processes' transforms+=WorkPiece ("," transforms+=WorkPiece)*)? ('initiate'
	//	(consistsOf+=ManufacturingSystemElement* | '{' consistsOf+=ManufacturingSystemElement* '}'))*
	//	'}';
	public ManufacturingSystemElements getManufacturingSystemAccess() {
		return pManufacturingSystem;
	}
	
	public ParserRule getManufacturingSystemRule() {
		return getManufacturingSystemAccess().getRule();
	}
	
	//ManufacturingSystemElement:
	//	ManufacturingSystemElement_Impl | ManufacturingStep | TransportStep | QualityAssuranceStep | StoragePoint |
	//	CompositeManufacturingStep;
	public ManufacturingSystemElementElements getManufacturingSystemElementAccess() {
		return pManufacturingSystemElement;
	}
	
	public ParserRule getManufacturingSystemElementRule() {
		return getManufacturingSystemElementAccess().getRule();
	}
	
	//InputCondition:
	//	InputCondition_Impl | WorkPieceCondition | BinaryCondition | Negation;
	public InputConditionElements getInputConditionAccess() {
		return pInputCondition;
	}
	
	public ParserRule getInputConditionRule() {
		return getInputConditionAccess().getRule();
	}
	
	//ManufacturingSystemElement_Impl ManufacturingSystemElement:
	//	{ManufacturingSystemElement}
	//	'ManufacturingSystemElement'
	//	name=EString
	//	'{' ('transition' '(' transition+=[ManufacturingSystemElement|EString] (","
	//	transition+=[ManufacturingSystemElement|EString])* ')')?
	//	'set' 'responsible' responsible=[Responsible|EString]
	//	'}';
	public ManufacturingSystemElement_ImplElements getManufacturingSystemElement_ImplAccess() {
		return pManufacturingSystemElement_Impl;
	}
	
	public ParserRule getManufacturingSystemElement_ImplRule() {
		return getManufacturingSystemElement_ImplAccess().getRule();
	}
	
	//StoragePoint:
	//	'StoragePoint'
	//	name=EString
	//	'{'
	//	'set' 'responsible' responsible=[Responsible|EString] ('stores' stores+=[WorkPieceType|EString] (","
	//	stores+=[WorkPieceType|EString])*)? ('transition' transition+=[ManufacturingSystemElement|EString] (","
	//	transition+=[ManufacturingSystemElement|EString])*)?
	//	'}';
	public StoragePointElements getStoragePointAccess() {
		return pStoragePoint;
	}
	
	public ParserRule getStoragePointRule() {
		return getStoragePointAccess().getRule();
	}
	
	//WorkPieceType:
	//	{WorkPieceType} name=EString;
	public WorkPieceTypeElements getWorkPieceTypeAccess() {
		return pWorkPieceType;
	}
	
	public ParserRule getWorkPieceTypeRule() {
		return getWorkPieceTypeAccess().getRule();
	}
	
	//WorkPiece:
	//	'WorkPiece'
	//	'{'
	//	'of' 'type' hasType=[WorkPieceType|EString]
	//	'}';
	public WorkPieceElements getWorkPieceAccess() {
		return pWorkPiece;
	}
	
	public ParserRule getWorkPieceRule() {
		return getWorkPieceAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Responsible:
	//	{Responsible} name=EString;
	public ResponsibleElements getResponsibleAccess() {
		return pResponsible;
	}
	
	public ParserRule getResponsibleRule() {
		return getResponsibleAccess().getRule();
	}
	
	//ManufacturingStep:
	//	'ManufacturingStep'
	//	name=EString
	//	'{'
	//	'speed' '=' speed=EInt ('transition' transition+=[ManufacturingSystemElement|EString] (","
	//	transition+=[ManufacturingSystemElement|EString])*)?
	//	'set' 'responsible' responsible=[Responsible|EString]
	//	'input' '{' input+=InputCondition ("," input+=InputCondition)* '}'
	//	'output' '{' output+=OutputDecision ("," output+=OutputDecision)* '}'
	//	'}';
	public ManufacturingStepElements getManufacturingStepAccess() {
		return pManufacturingStep;
	}
	
	public ParserRule getManufacturingStepRule() {
		return getManufacturingStepAccess().getRule();
	}
	
	//TransportStep:
	//	'TransportStep'
	//	name=EString
	//	'{'
	//	'speed' '=' speed=EInt ('transition' transition+=[ManufacturingSystemElement|EString] (","
	//	transition+=[ManufacturingSystemElement|EString])*)?
	//	'set' 'responsible' responsible=[Responsible|EString]
	//	'input' '{' input+=InputCondition ("," input+=InputCondition)* '}'
	//	//output? isnt this just transporting workpieces?
	//	'output' '{' output+=OutputDecision ("," output+=OutputDecision)* '}'
	//	'}';
	public TransportStepElements getTransportStepAccess() {
		return pTransportStep;
	}
	
	public ParserRule getTransportStepRule() {
		return getTransportStepAccess().getRule();
	}
	
	//QualityAssuranceStep:
	//	'QualityAssuranceStep'
	//	name=EString
	//	'{'
	//	'speed' '=' speed=EInt ('transition' transition+=[ManufacturingSystemElement|EString] (","
	//	transition+=[ManufacturingSystemElement|EString])*)?
	//	'set' 'responsible' responsible=[Responsible|EString]
	//	'input' '{' input+=InputCondition ("," input+=InputCondition)* '}'
	//	'output' '{' output+=OutputDecision ("," output+=OutputDecision)* '}'
	//	'}';
	public QualityAssuranceStepElements getQualityAssuranceStepAccess() {
		return pQualityAssuranceStep;
	}
	
	public ParserRule getQualityAssuranceStepRule() {
		return getQualityAssuranceStepAccess().getRule();
	}
	
	////ok this is the manufacturing step
	//CompositeManufacturingStep:
	//	'CompositeManufacturingStep'
	//	name=EString
	//	'{'
	//	'speed' '=' speed=EInt ('transition' transition+=[ManufacturingSystemElement|EString] (","
	//	transition+=[ManufacturingSystemElement|EString])*)?
	//	'set' 'responsible' responsible=[Responsible|EString]
	//	'input' '{' input+=InputCondition ("," input+=InputCondition)* '}'
	//	'output' '{' output+=OutputDecision ("," output+=OutputDecision)* '}'
	//	'contains' contains=ManufacturingSystem
	//	'}';
	public CompositeManufacturingStepElements getCompositeManufacturingStepAccess() {
		return pCompositeManufacturingStep;
	}
	
	public ParserRule getCompositeManufacturingStepRule() {
		return getCompositeManufacturingStepAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	////ok this is the  condition but we just create one?
	//InputCondition_Impl InputCondition:
	//	{InputCondition}
	//	'InputCondition'
	//	name=EString;
	public InputCondition_ImplElements getInputCondition_ImplAccess() {
		return pInputCondition_Impl;
	}
	
	public ParserRule getInputCondition_ImplRule() {
		return getInputCondition_ImplAccess().getRule();
	}
	
	////somehow related to the condition but why is the type optional
	//OutputDecision:
	//	('output' 'type' outputTypes=[WorkPieceType|EString])?
	//	'input' 'condition' input+=[InputCondition|EString] ("," input+=[InputCondition|EString])*;
	public OutputDecisionElements getOutputDecisionAccess() {
		return pOutputDecision;
	}
	
	public ParserRule getOutputDecisionRule() {
		return getOutputDecisionAccess().getRule();
	}
	
	////set workpiece type on condition
	//WorkPieceCondition:
	//	name=EString
	//	'{'
	//	'requires' 'type' requiresType=[WorkPieceType|EString]
	//	'}';
	public WorkPieceConditionElements getWorkPieceConditionAccess() {
		return pWorkPieceCondition;
	}
	
	public ParserRule getWorkPieceConditionRule() {
		return getWorkPieceConditionAccess().getRule();
	}
	
	////this i dont get exactly what and how it does it
	////left input condition and right input condition...what?
	//BinaryCondition:
	//	'BinaryCondition'
	//	name=EString
	//	'{'
	//	'left' left=[InputCondition|EString] type=BinaryType 'right' right=[InputCondition|EString]
	//	/*
	//		'left' left=[InputCondition|EString]
	//		'right' right=[InputCondition|EString]
	//		*/
	//	'}';
	public BinaryConditionElements getBinaryConditionAccess() {
		return pBinaryCondition;
	}
	
	public ParserRule getBinaryConditionRule() {
		return getBinaryConditionAccess().getRule();
	}
	
	////Question mark?
	//Negation:
	//	'Negation'
	//	name=EString
	//	'{'
	//	'contains' '{' 'condition' contains=[InputCondition|EString] '}'
	//	'}';
	public NegationElements getNegationAccess() {
		return pNegation;
	}
	
	public ParserRule getNegationRule() {
		return getNegationAccess().getRule();
	}
	
	//enum BinaryType:
	//	and | or;
	public BinaryTypeElements getBinaryTypeAccess() {
		return eBinaryType;
	}
	
	public EnumRule getBinaryTypeRule() {
		return getBinaryTypeAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
